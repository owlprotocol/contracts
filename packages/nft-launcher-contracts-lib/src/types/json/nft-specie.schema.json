{
    "title": "NFT Specie Metadata Schema",
    "description": "Schema for a valid Specie Metadata",
    "type": "object",
    "properties": {
        "name": {
            "type": "string",
            "description": "Name of the item",
            "examples": ["Bored Ape Yacht Club", "Cool Cats"]
        },
        "description": {
            "type": "string",
            "description": "These are the attributes for the item, which will show up on the OpenSea page for the item."
        },
        "traits": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "trait_type": {
                        "type": "string",
                        "description": "The trait being referred to",
                        "examples": ["Eyes"]
                    },
                    "type": {
                        "type": "string",
                        "enum": ["Image", "number", "enum", "color", "colormap"],
                        "description": "This is what the data encodes. Usually, will refer to items in value_options array",
                        "examples": ["number", "enum", "Image"]
                    },
                    "format": {
                        "type": "boolean",
                        "description": "Whether or not this trait is paramterized"
                    },
                    "value_bit_size": {
                        "type": "number",
                        "description": "The amount of bits required to encapsulate all possible instances of this trait",
                        "minimum": 0,
                        "maximum": 256,
                        "examples": [1, 2]
                    },
                    "display_type": {
                        "type": "string",
                        "description": "How to display trait value on Opensea",
                        "examples": ["number", "boost_number", "boost_percentage", "date"]
                    },
                    "max_value": {
                        "type": "number",
                        "description": "Optional, defines max value. Only applicable when type is number"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of atrribute, as per EIP-721"
                    }
                },
                "required": ["trait_type", "type", "value_options", "value_bit_size"],
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "Image"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "value_options": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "value_name": {
                                                "type": "string",
                                                "description": "An instance of a trait_type",
                                                "examples": ["Blue", "Big", "Square"]
                                            },
                                            "image": {
                                                "type": "string",
                                                "description": "Image of the value"
                                            }
                                        },
                                        "required": ["value_name"],
                                        "oneOf": [
                                            {
                                                "required": ["image"]
                                            },
                                            {
                                                "required": ["value"]
                                            }
                                        ]
                                    },
                                    "minItems": 1
                                }
                            }
                        },
                        "else": {
                            "not": { "required": ["format"] }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "number"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "value_options": {
                                    "type": "object",
                                    "properties": {
                                        "min": {
                                            "type": "number",
                                            "description": "minimum in range inclusive"
                                        },
                                        "max": {
                                            "type": "number",
                                            "description": "maxmimum in range exclusive"
                                        }
                                    },
                                    "required": ["min", "max"]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "enum"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "value_options": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "value_name": {
                                                "type": "string",
                                                "description": "An instance of a trait_type",
                                                "examples": ["Blue", "Big", "Square"]
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Value referred to by value_name"
                                            }
                                        },
                                        "required": ["value_name", "value"]
                                    },
                                    "minItems": 1
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "color"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "value_options": {
                                    "type": "object",
                                    "properties": {
                                        "min": {
                                            "type": "number",
                                            "description": "minimum in range inclusive"
                                        },
                                        "max": {
                                            "type": "number",
                                            "description": "maxmimum in range exclusive"
                                        }
                                    },
                                    "required": ["min", "max"]
                                }
                            }
                        }
                    }
                ]
            }
        },
        "maxBitSize": {
            "type": "integer",
            "description": "The amount of bits required to encapsulate all possible instances of this SpecieMetadata"
        }
    },
    "required": ["traits", "maxBitSize"]
}
