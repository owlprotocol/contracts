/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type NewClone = ContractEventLog<{
  proxyAddr: string;
  0: string;
}>;

export interface ERC721Proxy extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): ERC721Proxy;
  clone(): ERC721Proxy;
  methods: {
    ADMIN(): NonPayableTransactionObject<string>;

    createProxy(
      _name: string,
      _symbol: string,
      _baseURI: string
    ): NonPayableTransactionObject<void>;
  };
  events: {
    NewClone(cb?: Callback<NewClone>): EventEmitter;
    NewClone(options?: EventOptions, cb?: Callback<NewClone>): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "NewClone", cb: Callback<NewClone>): void;
  once(event: "NewClone", options: EventOptions, cb: Callback<NewClone>): void;
}
