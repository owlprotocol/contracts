/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC165Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Storage__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Crafter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Crafter__factory>;
    getContractFactory(
      name: "CrafterMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrafterMint__factory>;
    getContractFactory(
      name: "INFTCrafter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTCrafter__factory>;
    getContractFactory(
      name: "ERC1820ImplementerAuthorizeAll",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1820ImplementerAuthorizeAll__factory>;
    getContractFactory(
      name: "ERC1820ImplementerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1820ImplementerInterface__factory>;
    getContractFactory(
      name: "ERC1820Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1820Registry__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Mintable__factory>;
    getContractFactory(
      name: "ERC721MintableCode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MintableCode__factory>;
    getContractFactory(
      name: "ERC721Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Proxy__factory>;
    getContractFactory(
      name: "IERC721Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Mintable__factory>;
    getContractFactory(
      name: "IMinterAutoId",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinterAutoId__factory>;
    getContractFactory(
      name: "IMinterBreeding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinterBreeding__factory>;
    getContractFactory(
      name: "IMinterRandom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinterRandom__factory>;
    getContractFactory(
      name: "IMinterSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinterSimple__factory>;
    getContractFactory(
      name: "IMinterSimpleMerkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinterSimpleMerkle__factory>;
    getContractFactory(
      name: "MinterAutoId",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterAutoId__factory>;
    getContractFactory(
      name: "MinterBreeding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterBreeding__factory>;
    getContractFactory(
      name: "MinterRandom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterRandom__factory>;
    getContractFactory(
      name: "MinterSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterSimple__factory>;
    getContractFactory(
      name: "MinterSimpleMerkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterSimpleMerkle__factory>;
    getContractFactory(
      name: "IMinterCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinterCore__factory>;
    getContractFactory(
      name: "MinterCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterCore__factory>;
    getContractFactory(
      name: "MintGuardAllowlist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintGuardAllowlist__factory>;
    getContractFactory(
      name: "MintGuardLimitedMints",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintGuardLimitedMints__factory>;
    getContractFactory(
      name: "MintGuardMerkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintGuardMerkle__factory>;
    getContractFactory(
      name: "IMintGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintGuard__factory>;
    getContractFactory(
      name: "MintGuardCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintGuardCore__factory>;
    getContractFactory(
      name: "FactoryERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryERC20__factory>;
    getContractFactory(
      name: "FactoryERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryERC721__factory>;
    getContractFactory(
      name: "InterfaceIds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterfaceIds__factory>;
    getContractFactory(
      name: "RosalindTestLab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RosalindTestLab__factory>;
    getContractFactory(
      name: "ERC20Mint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mint__factory>;
    getContractFactory(
      name: "ERC721Mint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Mint__factory>;
    getContractFactory(
      name: "Create2CloneFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Create2CloneFactory__factory>;
    getContractFactory(
      name: "OZClonesFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OZClonesFactory__factory>;

    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC165Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Storage>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Crafter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Crafter>;
    getContractAt(
      name: "CrafterMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrafterMint>;
    getContractAt(
      name: "INFTCrafter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INFTCrafter>;
    getContractAt(
      name: "ERC1820ImplementerAuthorizeAll",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1820ImplementerAuthorizeAll>;
    getContractAt(
      name: "ERC1820ImplementerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1820ImplementerInterface>;
    getContractAt(
      name: "ERC1820Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1820Registry>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Mintable>;
    getContractAt(
      name: "ERC721MintableCode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MintableCode>;
    getContractAt(
      name: "ERC721Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Proxy>;
    getContractAt(
      name: "IERC721Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Mintable>;
    getContractAt(
      name: "IMinterAutoId",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinterAutoId>;
    getContractAt(
      name: "IMinterBreeding",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinterBreeding>;
    getContractAt(
      name: "IMinterRandom",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinterRandom>;
    getContractAt(
      name: "IMinterSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinterSimple>;
    getContractAt(
      name: "IMinterSimpleMerkle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinterSimpleMerkle>;
    getContractAt(
      name: "MinterAutoId",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterAutoId>;
    getContractAt(
      name: "MinterBreeding",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterBreeding>;
    getContractAt(
      name: "MinterRandom",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterRandom>;
    getContractAt(
      name: "MinterSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterSimple>;
    getContractAt(
      name: "MinterSimpleMerkle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterSimpleMerkle>;
    getContractAt(
      name: "IMinterCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinterCore>;
    getContractAt(
      name: "MinterCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterCore>;
    getContractAt(
      name: "MintGuardAllowlist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintGuardAllowlist>;
    getContractAt(
      name: "MintGuardLimitedMints",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintGuardLimitedMints>;
    getContractAt(
      name: "MintGuardMerkle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintGuardMerkle>;
    getContractAt(
      name: "IMintGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintGuard>;
    getContractAt(
      name: "MintGuardCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintGuardCore>;
    getContractAt(
      name: "FactoryERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryERC20>;
    getContractAt(
      name: "FactoryERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryERC721>;
    getContractAt(
      name: "InterfaceIds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterfaceIds>;
    getContractAt(
      name: "RosalindTestLab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RosalindTestLab>;
    getContractAt(
      name: "ERC20Mint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mint>;
    getContractAt(
      name: "ERC721Mint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Mint>;
    getContractAt(
      name: "Create2CloneFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Create2CloneFactory>;
    getContractAt(
      name: "OZClonesFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OZClonesFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
