/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Create2CloneFactory,
  Create2CloneFactoryInterface,
} from "../Create2CloneFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "proxyAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "logicAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "NewClone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "logicAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "create2AtomicallyClone",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "logicAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "create2Clone",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "logicAddr",
        type: "address",
      },
    ],
    name: "getBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "logicAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getCloneAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "logicAddr",
        type: "address",
      },
    ],
    name: "getInitBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cc2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d4da8f01461005c5780631599cdc61461008c578063858dfffc146100bc578063ad3415bc146100ec578063cea8ed751461011c575b600080fd5b6100766004803603810190610071919061044e565b61014c565b6040516100839190610494565b60405180910390f35b6100a660048036038101906100a19190610621565b610165565b6040516100b3919061069f565b60405180910390f35b6100d660048036038101906100d191906106ba565b610233565b6040516100e3919061069f565b60405180910390f35b6101066004803603810190610101919061044e565b6102ff565b6040516101139190610782565b60405180910390f35b610136600480360381019061013191906107a4565b61039b565b604051610143919061069f565b60405180910390f35b6000610157826102ff565b805190602001209050919050565b60006101718484610233565b905060008251111561022c5760008173ffffffffffffffffffffffffffffffffffffffff16836040516101a49190610833565b6000604051808303816000865af19150503d80600081146101e1576040519150601f19603f3d011682016040523d82523d6000602084013e6101e6565b606091505b505090508061022a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610221906108cd565b60405180910390fd5b505b9392505050565b60008061023f846102ff565b9050828151602083016000f59150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b49061095f565b60405180910390fd5b7fa8bf987e8fd20c4aae6fff1ca892ea748b539cf0164aefab56c83340007485df8285856040516102f09392919061097f565b60405180910390a15092915050565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036890610a4e565b60405180910390fd5b8160601b6040516020016103859190610b5e565b6040516020818303038152906040529050919050565b600083826103a88561014c565b6040516020016103ba93929190610c44565b6040516020818303038152906040528051906020012060001c90509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041b826103f0565b9050919050565b61042b81610410565b811461043657600080fd5b50565b60008135905061044881610422565b92915050565b600060208284031215610464576104636103e6565b5b600061047284828501610439565b91505092915050565b6000819050919050565b61048e8161047b565b82525050565b60006020820190506104a96000830184610485565b92915050565b6104b88161047b565b81146104c357600080fd5b50565b6000813590506104d5816104af565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61052e826104e5565b810181811067ffffffffffffffff8211171561054d5761054c6104f6565b5b80604052505050565b60006105606103dc565b905061056c8282610525565b919050565b600067ffffffffffffffff82111561058c5761058b6104f6565b5b610595826104e5565b9050602081019050919050565b82818337600083830152505050565b60006105c46105bf84610571565b610556565b9050828152602081018484840111156105e0576105df6104e0565b5b6105eb8482856105a2565b509392505050565b600082601f830112610608576106076104db565b5b81356106188482602086016105b1565b91505092915050565b60008060006060848603121561063a576106396103e6565b5b600061064886828701610439565b9350506020610659868287016104c6565b925050604084013567ffffffffffffffff81111561067a576106796103eb565b5b610686868287016105f3565b9150509250925092565b61069981610410565b82525050565b60006020820190506106b46000830184610690565b92915050565b600080604083850312156106d1576106d06103e6565b5b60006106df85828601610439565b92505060206106f0858286016104c6565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610734578082015181840152602081019050610719565b83811115610743576000848401525b50505050565b6000610754826106fa565b61075e8185610705565b935061076e818560208601610716565b610777816104e5565b840191505092915050565b6000602082019050818103600083015261079c8184610749565b905092915050565b6000806000606084860312156107bd576107bc6103e6565b5b60006107cb86828701610439565b93505060206107dc86828701610439565b92505060406107ed868287016104c6565b9150509250925092565b600081905092915050565b600061080d826106fa565b61081781856107f7565b9350610827818560208601610716565b80840191505092915050565b600061083f8284610802565b915081905092915050565b600082825260208201905092915050565b7f43726561746532436c6f6e65466163746f72793a204661696c656420746f206360008201527f616c6c207468652070726f787900000000000000000000000000000000000000602082015250565b60006108b7602d8361084a565b91506108c28261085b565b604082019050919050565b600060208201905081810360008301526108e6816108aa565b9050919050565b7f43726561746532436c6f6e65466163746f72793a20435245415445322046616960008201527f6c656420746f206465706c6f7900000000000000000000000000000000000000602082015250565b6000610949602d8361084a565b9150610954826108ed565b604082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b60006060820190506109946000830186610690565b6109a16020830185610690565b6109ae6040830184610485565b949350505050565b7f43726561746532436c6f6e65466163746f72793a206c6f67696341646472206360008201527f616e6e6f742062652073746f726564206120746865207a65726f20616464726560208201527f7373000000000000000000000000000000000000000000000000000000000000604082015250565b6000610a3860428361084a565b9150610a43826109b6565b606082019050919050565b60006020820190508181036000830152610a6781610a2b565b9050919050565b600081905092915050565b7f3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000600082015250565b6000610aaf601483610a6e565b9150610aba82610a79565b601482019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000819050919050565b610b0c610b0782610ac5565b610af1565b82525050565b7f5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000600082015250565b6000610b48600f83610a6e565b9150610b5382610b12565b600f82019050919050565b6000610b6982610aa2565b9150610b758284610afb565b601482019150610b8482610b3b565b915081905092915050565b7fff00000000000000000000000000000000000000000000000000000000000000600082015250565b6000610bc5600183610a6e565b9150610bd082610b8f565b600182019050919050565b60008160601b9050919050565b6000610bf382610bdb565b9050919050565b6000610c0582610be8565b9050919050565b610c1d610c1882610410565b610bfa565b82525050565b6000819050919050565b610c3e610c398261047b565b610c23565b82525050565b6000610c4f82610bb8565b9150610c5b8286610c0c565b601482019150610c6b8285610c2d565b602082019150610c7b8284610c2d565b60208201915081905094935050505056fea264697066735822122086a34df576caff0ae04a062a3c027469fa38d8ccf69717e4efce0de91b2492d164736f6c63430008090033";

export class Create2CloneFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Create2CloneFactory> {
    return super.deploy(overrides || {}) as Promise<Create2CloneFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Create2CloneFactory {
    return super.attach(address) as Create2CloneFactory;
  }
  connect(signer: Signer): Create2CloneFactory__factory {
    return super.connect(signer) as Create2CloneFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Create2CloneFactoryInterface {
    return new utils.Interface(_abi) as Create2CloneFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Create2CloneFactory {
    return new Contract(address, _abi, signerOrProvider) as Create2CloneFactory;
  }
}
