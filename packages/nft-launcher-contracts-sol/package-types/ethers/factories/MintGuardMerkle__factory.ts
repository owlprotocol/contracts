/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MintGuardMerkle,
  MintGuardMerkleInterface,
} from "../MintGuardMerkle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minterContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "SetAllowedRoot",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minterContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "addAllowedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "allowMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minterContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "removeAllowedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c08806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a714610051578063095f1d4314610081578063a4cd7abc146100b1578063b0742323146100cd575b600080fd5b61006b60048036038101906100669190610696565b6100e9565b60405161007891906106de565b60405180910390f35b61009b60048036038101906100969190610828565b610153565b6040516100a891906106de565b60405180910390f35b6100cb60048036038101906100c691906108b0565b610268565b005b6100e760048036038101906100e291906108b0565b6103fc565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008033878660405160200161016b93929190610930565b604051602081830303815290604052805190602001209050600080600083815260200190815260200160002054905085811480156101aa575060008114155b6101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e0906109c4565b60405180910390fd5b61025b858580806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050878960405160200161024091906109e4565b60405160208183030381529060405280519060200120610591565b9250505095945050505050565b828260008273ffffffffffffffffffffffffffffffffffffffff16632be6a2a9836040518263ffffffff1660e01b81526004016102a591906109ff565b60a06040518083038186803b1580156102bd57600080fd5b505afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f59190610a44565b9091929350909150905050809150503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990610b0b565b60405180910390fd5b600086868660405160200161038993929190610930565b60405160208183030381529060405280519060200120905084600080838152602001908152602001600020819055507f451af3fcce1e66864a8194c388b6e43eb583fb7d2722313e01cfbabfa63e88978787876040516103eb93929190610930565b60405180910390a150505050505050565b828260008273ffffffffffffffffffffffffffffffffffffffff16632be6a2a9836040518263ffffffff1660e01b815260040161043991906109ff565b60a06040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610a44565b9091929350909150905050809150503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd90610b0b565b60405180910390fd5b600086868660405160200161051d93929190610930565b6040516020818303038152906040528051906020012090506000806000838152602001908152602001600020819055507f451af3fcce1e66864a8194c388b6e43eb583fb7d2722313e01cfbabfa63e889787878760405161058093929190610930565b60405180910390a150505050505050565b60008261059e85846105a8565b1490509392505050565b60008082905060005b84518110156106125760008582815181106105cf576105ce610b2b565b5b602002602001015190508083116105f1576105ea838261061d565b92506105fe565b6105fb818461061d565b92505b50808061060a90610b89565b9150506105b1565b508091505092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6106738161063e565b811461067e57600080fd5b50565b6000813590506106908161066a565b92915050565b6000602082840312156106ac576106ab610634565b5b60006106ba84828501610681565b91505092915050565b60008115159050919050565b6106d8816106c3565b82525050565b60006020820190506106f360008301846106cf565b92915050565b6000819050919050565b61070c816106f9565b811461071757600080fd5b50565b60008135905061072981610703565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075a8261072f565b9050919050565b61076a8161074f565b811461077557600080fd5b50565b60008135905061078781610761565b92915050565b6000819050919050565b6107a08161078d565b81146107ab57600080fd5b50565b6000813590506107bd81610797565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107e8576107e76107c3565b5b8235905067ffffffffffffffff811115610805576108046107c8565b5b602083019150836020820283011115610821576108206107cd565b5b9250929050565b60008060008060006080868803121561084457610843610634565b5b60006108528882890161071a565b955050602061086388828901610778565b9450506040610874888289016107ae565b935050606086013567ffffffffffffffff81111561089557610894610639565b5b6108a1888289016107d2565b92509250509295509295909350565b6000806000606084860312156108c9576108c8610634565b5b60006108d786828701610778565b93505060206108e88682870161071a565b92505060406108f9868287016107ae565b9150509250925092565b61090c8161074f565b82525050565b61091b816106f9565b82525050565b61092a8161078d565b82525050565b60006060820190506109456000830186610903565b6109526020830185610912565b61095f6040830184610921565b949350505050565b600082825260208201905092915050565b7f4e6f207065726d697373696f6e20736574210000000000000000000000000000600082015250565b60006109ae601283610967565b91506109b982610978565b602082019050919050565b600060208201905081810360008301526109dd816109a1565b9050919050565b60006020820190506109f96000830184610903565b92915050565b6000602082019050610a146000830184610912565b92915050565b600081519050610a2981610761565b92915050565b600081519050610a3e81610703565b92915050565b600080600080600060a08688031215610a6057610a5f610634565b5b6000610a6e88828901610a1a565b9550506020610a7f88828901610a1a565b9450506040610a9088828901610a1a565b9350506060610aa188828901610a2f565b9250506080610ab288828901610a1a565b9150509295509295909350565b7f4e6f7420746865206f776e657221000000000000000000000000000000000000600082015250565b6000610af5600e83610967565b9150610b0082610abf565b602082019050919050565b60006020820190508181036000830152610b2481610ae8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b94826106f9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bc757610bc6610b5a565b5b60018201905091905056fea2646970667358221220d4c1b7886545b7353563a971b08d4b79ac87c0e5b8ba19f92cbacc783d59831464736f6c63430008090033";

export class MintGuardMerkle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MintGuardMerkle> {
    return super.deploy(overrides || {}) as Promise<MintGuardMerkle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MintGuardMerkle {
    return super.attach(address) as MintGuardMerkle;
  }
  connect(signer: Signer): MintGuardMerkle__factory {
    return super.connect(signer) as MintGuardMerkle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintGuardMerkleInterface {
    return new utils.Interface(_abi) as MintGuardMerkleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintGuardMerkle {
    return new Contract(address, _abi, signerOrProvider) as MintGuardMerkle;
  }
}
