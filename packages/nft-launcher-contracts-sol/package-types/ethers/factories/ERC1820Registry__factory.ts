/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1820Registry,
  ERC1820RegistryInterface,
} from "../ERC1820Registry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "InterfaceImplementerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "ManagerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_interfaceHash",
        type: "bytes32",
      },
    ],
    name: "getInterfaceImplementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "implementsERC165Interface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "implementsERC165InterfaceNoCache",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_interfaceName",
        type: "string",
      },
    ],
    name: "interfaceHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_implementer",
        type: "address",
      },
    ],
    name: "setInterfaceImplementer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newManager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "updateERC165Cache",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a41e7d511161005b578063a41e7d5114610125578063aabbb8ca14610141578063b705676514610171578063f712f3e8146101a157610088565b806329965a1d1461008d5780633d584063146100a95780635df8122f146100d957806365ba36c1146100f5575b600080fd5b6100a760048036038101906100a29190610d6f565b6101d1565b005b6100c360048036038101906100be9190610dc2565b61051d565b6040516100d09190610dfe565b60405180910390f35b6100f360048036038101906100ee9190610e19565b610622565b005b61010f600480360381019061010a9190610ebe565b6107af565b60405161011c9190610f1a565b60405180910390f35b61013f600480360381019061013a9190610f8d565b6107e2565b005b61015b60048036038101906101569190610fcd565b610950565b6040516101689190610dfe565b60405180910390f35b61018b60048036038101906101869190610f8d565b610a3e565b6040516101989190611028565b60405180910390f35b6101bb60048036038101906101b69190610f8d565b610af3565b6040516101c89190611028565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461020c578361020e565b335b90503373ffffffffffffffffffffffffffffffffffffffff166102308261051d565b73ffffffffffffffffffffffffffffffffffffffff1614610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d906110a0565b60405180910390fd5b61028f83610c6c565b156102cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c69061110c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561033857503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561042e5760405160200161034c90611183565b604051602081830303815290604052805190602001208273ffffffffffffffffffffffffffffffffffffffff1663249cb3fa85846040518363ffffffff1660e01b815260040161039d929190611198565b60206040518083038186803b1580156103b557600080fd5b505afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed91906111d6565b1461042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061124f565b60405180910390fd5b5b816000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16838273ffffffffffffffffffffffffffffffffffffffff167f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15360405160405180910390a450505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105ba5781905061061d565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b3373ffffffffffffffffffffffffffffffffffffffff166106428361051d565b73ffffffffffffffffffffffffffffffffffffffff1614610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f906110a0565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106d157806106d4565b60005b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a35050565b600082826040516020016107c49291906112a3565b60405160208183030381529060405280519060200120905092915050565b6107ec8282610a3e565b6107f75760006107f9565b815b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461098d578361098f565b335b905061099a83610c6c565b156109c45760008390506109ae8282610af3565b6109b95760006109bb565b815b92505050610a38565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150505b92915050565b6000806000610a54856301ffc9a760e01b610c9c565b80925081935050506000821480610a6b5750600081145b15610a7b57600092505050610aed565b610a8c8563ffffffff60e01b610c9c565b80925081935050506000821480610aa4575060008114155b15610ab457600092505050610aed565b610abe8585610c9c565b8092508193505050600182148015610ad65750600181145b15610ae657600192505050610aed565b6000925050505b92915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff16610ba657610b9f8383610a3e565b9050610c66565b8273ffffffffffffffffffffffffffffffffffffffff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b92915050565b60008060001b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b8316149050919050565b60008060006301ffc9a760e01b905060405181815284600482015260208160248389617530fa93508051925050509250929050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0682610cdb565b9050919050565b610d1681610cfb565b8114610d2157600080fd5b50565b600081359050610d3381610d0d565b92915050565b6000819050919050565b610d4c81610d39565b8114610d5757600080fd5b50565b600081359050610d6981610d43565b92915050565b600080600060608486031215610d8857610d87610cd1565b5b6000610d9686828701610d24565b9350506020610da786828701610d5a565b9250506040610db886828701610d24565b9150509250925092565b600060208284031215610dd857610dd7610cd1565b5b6000610de684828501610d24565b91505092915050565b610df881610cfb565b82525050565b6000602082019050610e136000830184610def565b92915050565b60008060408385031215610e3057610e2f610cd1565b5b6000610e3e85828601610d24565b9250506020610e4f85828601610d24565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e7e57610e7d610e59565b5b8235905067ffffffffffffffff811115610e9b57610e9a610e5e565b5b602083019150836001820283011115610eb757610eb6610e63565b5b9250929050565b60008060208385031215610ed557610ed4610cd1565b5b600083013567ffffffffffffffff811115610ef357610ef2610cd6565b5b610eff85828601610e68565b92509250509250929050565b610f1481610d39565b82525050565b6000602082019050610f2f6000830184610f0b565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f6a81610f35565b8114610f7557600080fd5b50565b600081359050610f8781610f61565b92915050565b60008060408385031215610fa457610fa3610cd1565b5b6000610fb285828601610d24565b9250506020610fc385828601610f78565b9150509250929050565b60008060408385031215610fe457610fe3610cd1565b5b6000610ff285828601610d24565b925050602061100385828601610d5a565b9150509250929050565b60008115159050919050565b6110228161100d565b82525050565b600060208201905061103d6000830184611019565b92915050565b600082825260208201905092915050565b7f4e6f7420746865206d616e616765720000000000000000000000000000000000600082015250565b600061108a600f83611043565b915061109582611054565b602082019050919050565b600060208201905081810360008301526110b98161107d565b9050919050565b7f4d757374206e6f7420626520616e204552433136352068617368000000000000600082015250565b60006110f6601a83611043565b9150611101826110c0565b602082019050919050565b60006020820190508181036000830152611125816110e9565b9050919050565b600081905092915050565b7f455243313832305f4143434550545f4d41474943000000000000000000000000600082015250565b600061116d60148361112c565b915061117882611137565b601482019050919050565b600061118e82611160565b9150819050919050565b60006040820190506111ad6000830185610f0b565b6111ba6020830184610def565b9392505050565b6000815190506111d081610d43565b92915050565b6000602082840312156111ec576111eb610cd1565b5b60006111fa848285016111c1565b91505092915050565b7f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365600082015250565b6000611239602083611043565b915061124482611203565b602082019050919050565b600060208201905081810360008301526112688161122c565b9050919050565b82818337600083830152505050565b600061128a838561112c565b935061129783858461126f565b82840190509392505050565b60006112b082848661127e565b9150819050939250505056fea264697066735822122064704c0482718ac543ca061e3f0653fd1ebb63b06836519c156d7ff207aa079464736f6c63430008090033";

export class ERC1820Registry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1820Registry> {
    return super.deploy(overrides || {}) as Promise<ERC1820Registry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1820Registry {
    return super.attach(address) as ERC1820Registry;
  }
  connect(signer: Signer): ERC1820Registry__factory {
    return super.connect(signer) as ERC1820Registry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1820RegistryInterface {
    return new utils.Interface(_abi) as ERC1820RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1820Registry {
    return new Contract(address, _abi, signerOrProvider) as ERC1820Registry;
  }
}
