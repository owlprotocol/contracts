/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinterSimple, MinterSimpleInterface } from "../MinterSimple";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "CreateSpecies",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MintSpecies",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "createSpecies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
    ],
    name: "getSpecies",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintGuardAddress",
        type: "address",
      },
    ],
    name: "setMintGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506000620000266001620000ae60201b60201c565b905080156200004b576001600060016101000a81548160ff0219169083151502179055505b8015620000a75760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516200009e919062000231565b60405180910390a15b50620002f7565b60008060019054906101000a900460ff1615620001385760018260ff16148015620000ec5750620000ea30620001b460201b620008121760201c565b155b6200012e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012590620002d5565b60405180910390fd5b60009050620001af565b8160ff1660008054906101000a900460ff1660ff161062000190576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018790620002d5565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600062000219620002136200020d84620001d7565b620001ee565b620001e1565b9050919050565b6200022b81620001f8565b82525050565b600060208201905062000248600083018462000220565b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000620002bd602e836200024e565b9150620002ca826200025f565b604082019050919050565b60006020820190508181036000830152620002f081620002ae565b9050919050565b611abd80620003076000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80632be6a2a91161005b5780632be6a2a9146101255780638129fc1c14610159578063de5e938e14610163578063ea0b2c0e1461017f57610088565b806301ffc9a71461008d5780630414ab2b146100bd5780631b2ef1ca146100d9578063249cb3fa146100f5575b600080fd5b6100a760048036038101906100a2919061114a565b61019b565b6040516100b49190611192565b60405180910390f35b6100d760048036038101906100d291906111e3565b610213565b005b6100f360048036038101906100ee91906111e3565b61030f565b005b61010f600480360381019061010a91906112b7565b61040b565b60405161011c9190611306565b60405180910390f35b61013f600480360381019061013a9190611321565b610465565b60405161015095949392919061136c565b60405180910390f35b610161610530565b005b61017d600480360381019061017891906113bf565b610614565b005b61019960048036038101906101949190611426565b6107b9565b005b60006101a682610835565b8061020c575060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b816004600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b1906114c3565b60405180910390fd5b826102c48161089f565b6102cf8433856109e6565b837f8bf50312adaaf209a92a83a9dc5a552047b8f3da5809e85aaff1bb86b979ed8133856040516103019291906114e3565b60405180910390a250505050565b816004600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad906114c3565b60405180910390fd5b826103c08161089f565b6103cb843385610aec565b837f8bf50312adaaf209a92a83a9dc5a552047b8f3da5809e85aaff1bb86b979ed8133856040516103fd9291906114e3565b60405180910390a250505050565b60006002600084815260200190815260200160002060009054906101000a900460ff1661043b576000801b61045d565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b6000806000806000806004600088815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600301548460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955095509550955095505091939590929450565b600061053c6001610bf2565b90508015610560576001600060016101000a81548160ff0219169083151502179055505b60007ffb5619f1d9da90a5957d8c36ccf63373ce5c15f9ebffac4878252986a1cfdc54905061058e81610ce2565b6105b77f1f3a5ae100000000000000000000000000000000000000000000000000000000610d11565b5080156106115760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610608919061155e565b60405180910390a15b50565b61061e6003610de6565b60006004600061062e6003610dfc565b81526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600301819055503373ffffffffffffffffffffffffffffffffffffffff167fd83a2cae25dbbcad2777652cdf5dd52554093b0c8b7d4d4b20bdef825d28ba846107956003610dfc565b878787876040516107aa959493929190611579565b60405180910390a25050505050565b806004600084815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006004600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109e257600115158173ffffffffffffffffffffffffffffffffffffffff16631f22011b84336040518363ffffffff1660e01b815260040161094d9291906115cc565b602060405180830381600087803b15801561096757600080fd5b505af115801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611621565b1515146109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d89061169a565b60405180910390fd5b5b5050565b6000600460008581526020019081526020016000209050610a558160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030154610e0a565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b8152600401610ab49291906114e3565b600060405180830381600087803b158015610ace57600080fd5b505af1158015610ae2573d6000803e3d6000fd5b5050505050505050565b6000600460008581526020019081526020016000209050610b5b8160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030154610e0a565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401610bba9291906114e3565b600060405180830381600087803b158015610bd457600080fd5b505af1158015610be8573d6000803e3d6000fd5b5050505050505050565b60008060019054906101000a900460ff1615610c695760018260ff16148015610c215750610c1f30610812565b155b610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c579061172c565b60405180910390fd5b60009050610cdd565b8160ff1660008054906101000a900460ff1660ff1610610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb59061172c565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b60016002600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7190611798565b60405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6001816000016000828254019250508190555050565b600081600001549050919050565b610e8d846323b872dd60e01b858585604051602401610e2b939291906117b8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e93565b50505050565b6000610ef5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f5a9092919063ffffffff16565b9050600081511115610f555780806020019051810190610f159190611621565b610f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4b90611861565b60405180910390fd5b5b505050565b6060610f698484600085610f72565b90509392505050565b606082471015610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae906118f3565b60405180910390fd5b610fc085610812565b610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff69061195f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161102891906119f9565b60006040518083038185875af1925050503d8060008114611065576040519150601f19603f3d011682016040523d82523d6000602084013e61106a565b606091505b509150915061107a828286611086565b92505050949350505050565b60608315611096578290506110e6565b6000835111156110a95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dd9190611a65565b60405180910390fd5b9392505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611127816110f2565b811461113257600080fd5b50565b6000813590506111448161111e565b92915050565b6000602082840312156111605761115f6110ed565b5b600061116e84828501611135565b91505092915050565b60008115159050919050565b61118c81611177565b82525050565b60006020820190506111a76000830184611183565b92915050565b6000819050919050565b6111c0816111ad565b81146111cb57600080fd5b50565b6000813590506111dd816111b7565b92915050565b600080604083850312156111fa576111f96110ed565b5b6000611208858286016111ce565b9250506020611219858286016111ce565b9150509250929050565b6000819050919050565b61123681611223565b811461124157600080fd5b50565b6000813590506112538161122d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061128482611259565b9050919050565b61129481611279565b811461129f57600080fd5b50565b6000813590506112b18161128b565b92915050565b600080604083850312156112ce576112cd6110ed565b5b60006112dc85828601611244565b92505060206112ed858286016112a2565b9150509250929050565b61130081611223565b82525050565b600060208201905061131b60008301846112f7565b92915050565b600060208284031215611337576113366110ed565b5b6000611345848285016111ce565b91505092915050565b61135781611279565b82525050565b611366816111ad565b82525050565b600060a082019050611381600083018861134e565b61138e602083018761134e565b61139b604083018661134e565b6113a8606083018561135d565b6113b5608083018461134e565b9695505050505050565b600080600080608085870312156113d9576113d86110ed565b5b60006113e7878288016112a2565b94505060206113f8878288016112a2565b9350506040611409878288016112a2565b925050606061141a878288016111ce565b91505092959194509250565b6000806040838503121561143d5761143c6110ed565b5b600061144b858286016111ce565b925050602061145c858286016112a2565b9150509250929050565b600082825260208201905092915050565b7f5370656369657320646f6573206e6f7420657869737421000000000000000000600082015250565b60006114ad601783611466565b91506114b882611477565b602082019050919050565b600060208201905081810360008301526114dc816114a0565b9050919050565b60006040820190506114f8600083018561134e565b611505602083018461135d565b9392505050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061154861154361153e8461150c565b611523565b611516565b9050919050565b6115588161152d565b82525050565b6000602082019050611573600083018461154f565b92915050565b600060a08201905061158e600083018861135d565b61159b602083018761134e565b6115a8604083018661134e565b6115b5606083018561134e565b6115c2608083018461135d565b9695505050505050565b60006040820190506115e1600083018561135d565b6115ee602083018461134e565b9392505050565b6115fe81611177565b811461160957600080fd5b50565b60008151905061161b816115f5565b92915050565b600060208284031215611637576116366110ed565b5b60006116458482850161160c565b91505092915050565b7f4d696e742064656e696564210000000000000000000000000000000000000000600082015250565b6000611684600c83611466565b915061168f8261164e565b602082019050919050565b600060208201905081810360008301526116b381611677565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611716602e83611466565b9150611721826116ba565b604082019050919050565b6000602082019050818103600083015261174581611709565b9050919050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b6000611782601c83611466565b915061178d8261174c565b602082019050919050565b600060208201905081810360008301526117b181611775565b9050919050565b60006060820190506117cd600083018661134e565b6117da602083018561134e565b6117e7604083018461135d565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061184b602a83611466565b9150611856826117ef565b604082019050919050565b6000602082019050818103600083015261187a8161183e565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006118dd602683611466565b91506118e882611881565b604082019050919050565b6000602082019050818103600083015261190c816118d0565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611949601d83611466565b915061195482611913565b602082019050919050565b600060208201905081810360008301526119788161193c565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156119b3578082015181840152602081019050611998565b838111156119c2576000848401525b50505050565b60006119d38261197f565b6119dd818561198a565b93506119ed818560208601611995565b80840191505092915050565b6000611a0582846119c8565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611a3782611a10565b611a418185611466565b9350611a51818560208601611995565b611a5a81611a1b565b840191505092915050565b60006020820190508181036000830152611a7f8184611a2c565b90509291505056fea264697066735822122068c638e84eedaaf9731912587ba6f90608d053248b55d8b1e49350aeafe2407564736f6c63430008090033";

export class MinterSimple__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinterSimple> {
    return super.deploy(overrides || {}) as Promise<MinterSimple>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinterSimple {
    return super.attach(address) as MinterSimple;
  }
  connect(signer: Signer): MinterSimple__factory {
    return super.connect(signer) as MinterSimple__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterSimpleInterface {
    return new utils.Interface(_abi) as MinterSimpleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinterSimple {
    return new Contract(address, _abi, signerOrProvider) as MinterSimple;
  }
}
