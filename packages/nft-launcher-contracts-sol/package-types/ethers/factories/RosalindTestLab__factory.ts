/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RosalindTestLab,
  RosalindTestLabInterface,
} from "../RosalindTestLab";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "child",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "parents",
        type: "uint256[]",
      },
    ],
    name: "breedDNAGenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "parents",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "genes",
        type: "uint8[]",
      },
      {
        internalType: "uint256",
        name: "randomSeed",
        type: "uint256",
      },
    ],
    name: "breedDNASimple",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "parents",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "genes",
        type: "uint8[]",
      },
      {
        internalType: "uint256",
        name: "randomSeed",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "mutationRates",
        type: "uint256[]",
      },
    ],
    name: "breedDNAWithMutations",
    outputs: [
      {
        internalType: "uint256",
        name: "childDNA",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
      {
        internalType: "uint8[]",
        name: "genes",
        type: "uint8[]",
      },
      {
        internalType: "uint256",
        name: "randomSeed",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "mutationRates",
        type: "uint256[]",
      },
    ],
    name: "generateMutations",
    outputs: [
      {
        internalType: "uint256",
        name: "mutatedDNA",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "child",
        type: "uint256",
      },
    ],
    name: "getGenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e32806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631b1273bf1461005c5780633f3c8ba01461008c5780633f7d2007146100bc578063ea8ac080146100ec578063f6d560511461011c575b600080fd5b6100766004803603810190610071919061081f565b61014c565b60405161008391906108cd565b60405180910390f35b6100a660048036038101906100a19190610943565b610164565b6040516100b391906108cd565b60405180910390f35b6100d660048036038101906100d191906109a3565b61017a565b6040516100e391906108cd565b60405180910390f35b610106600480360381019061010191906109d0565b61018f565b60405161011391906108cd565b60405180910390f35b61013660048036038101906101319190610a90565b6101a9565b60405161014391906108cd565b60405180910390f35b600061015a858585856101c1565b9050949350505050565b60006101718484846102c6565b90509392505050565b600061018582610385565b60ff169050919050565b600061019e8686868686610392565b905095945050505050565b60006101b7858585856103b9565b9050949350505050565b60008060005b855181101561029d5760006101dc86836104c4565b90508482815181106101f1576101f0610b20565b5b6020026020010151811115610206575061028a565b600087838151811061021b5761021a610b20565b5b602002602001015160ff1690506000600189516102389190610b7e565b84106102455760ff61026d565b886001856102539190610bb2565b8151811061026457610263610b20565b5b60200260200101515b60ff169050600061027e838361050d565b90508086179550505050505b808061029590610c08565b9150506101c7565b5060006102aa87866104c4565b9050818116925081198716965082871792505050949350505050565b60008060005b8484905081101561031b57600060ff8686848181106102ee576102ed610b20565b5b905060200201351660ff16905082811115610307578092505b50808061031390610c08565b9150506102cc565b5060ff8016811415610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035990610cae565b60405180910390fd5b60ff19851694506001816103769190610bb2565b85179450849150509392505050565b600060ff82169050919050565b60006103a0868686866103b9565b90506103ae818585856101c1565b905095945050505050565b600080600090505b83518161ffff1610156104bb576000848261ffff16815181106103e7576103e6610b20565b5b602002602001015160ff1690506000600186516104049190610b7e565b8361ffff161061041657610100610445565b856001846104249190610cdc565b61ffff168151811061043957610438610b20565b5b602002602001015160ff165b905060008888905061045b878661ffff166104c4565b6104659190610d43565b9050600089898360ff1681811061047f5761047e610b20565b5b9050602002013590506000610494858561050d565b905060008183169050808817975050505050505080806104b390610d74565b9150506103c1565b50949350505050565b60008083836040516020016104da929190610d9f565b6040516020818303038152906040528051906020012060001c9050600081141561050357600080fd5b8091505092915050565b6000808361ffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901b905060008361010061054a9190610dc8565b61ffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901c90508082169250505092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6105a781610594565b81146105b257600080fd5b50565b6000813590506105c48161059e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610618826105cf565b810181811067ffffffffffffffff82111715610637576106366105e0565b5b80604052505050565b600061064a610580565b9050610656828261060f565b919050565b600067ffffffffffffffff821115610676576106756105e0565b5b602082029050602081019050919050565b600080fd5b600060ff82169050919050565b6106a28161068c565b81146106ad57600080fd5b50565b6000813590506106bf81610699565b92915050565b60006106d86106d38461065b565b610640565b905080838252602082019050602084028301858111156106fb576106fa610687565b5b835b81811015610724578061071088826106b0565b8452602084019350506020810190506106fd565b5050509392505050565b600082601f830112610743576107426105ca565b5b81356107538482602086016106c5565b91505092915050565b600067ffffffffffffffff821115610777576107766105e0565b5b602082029050602081019050919050565b600061079b6107968461075c565b610640565b905080838252602082019050602084028301858111156107be576107bd610687565b5b835b818110156107e757806107d388826105b5565b8452602084019350506020810190506107c0565b5050509392505050565b600082601f830112610806576108056105ca565b5b8135610816848260208601610788565b91505092915050565b600080600080608085870312156108395761083861058a565b5b6000610847878288016105b5565b945050602085013567ffffffffffffffff8111156108685761086761058f565b5b6108748782880161072e565b9350506040610885878288016105b5565b925050606085013567ffffffffffffffff8111156108a6576108a561058f565b5b6108b2878288016107f1565b91505092959194509250565b6108c781610594565b82525050565b60006020820190506108e260008301846108be565b92915050565b600080fd5b60008083601f840112610903576109026105ca565b5b8235905067ffffffffffffffff8111156109205761091f6108e8565b5b60208301915083602082028301111561093c5761093b610687565b5b9250929050565b60008060006040848603121561095c5761095b61058a565b5b600061096a868287016105b5565b935050602084013567ffffffffffffffff81111561098b5761098a61058f565b5b610997868287016108ed565b92509250509250925092565b6000602082840312156109b9576109b861058a565b5b60006109c7848285016105b5565b91505092915050565b6000806000806000608086880312156109ec576109eb61058a565b5b600086013567ffffffffffffffff811115610a0a57610a0961058f565b5b610a16888289016108ed565b9550955050602086013567ffffffffffffffff811115610a3957610a3861058f565b5b610a458882890161072e565b9350506040610a56888289016105b5565b925050606086013567ffffffffffffffff811115610a7757610a7661058f565b5b610a83888289016107f1565b9150509295509295909350565b60008060008060608587031215610aaa57610aa961058a565b5b600085013567ffffffffffffffff811115610ac857610ac761058f565b5b610ad4878288016108ed565b9450945050602085013567ffffffffffffffff811115610af757610af661058f565b5b610b038782880161072e565b9250506040610b14878288016105b5565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8982610594565b9150610b9483610594565b925082821015610ba757610ba6610b4f565b5b828203905092915050565b6000610bbd82610594565b9150610bc883610594565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bfd57610bfc610b4f565b5b828201905092915050565b6000610c1382610594565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4657610c45610b4f565b5b600182019050919050565b600082825260208201905092915050565b7f4d61782067656e65726174696f6e207265616368656421000000000000000000600082015250565b6000610c98601783610c51565b9150610ca382610c62565b602082019050919050565b60006020820190508181036000830152610cc781610c8b565b9050919050565b600061ffff82169050919050565b6000610ce782610cce565b9150610cf283610cce565b92508261ffff03821115610d0957610d08610b4f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d4e82610594565b9150610d5983610594565b925082610d6957610d68610d14565b5b828206905092915050565b6000610d7f82610cce565b915061ffff821415610d9457610d93610b4f565b5b600182019050919050565b6000604082019050610db460008301856108be565b610dc160208301846108be565b9392505050565b6000610dd382610cce565b9150610dde83610cce565b925082821015610df157610df0610b4f565b5b82820390509291505056fea26469706673582212201ada6658c0be29ac6aced3c054409b4a7b52cb6ab6f3e77a5255e4fdc219ebde64736f6c63430008090033";

export class RosalindTestLab__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RosalindTestLab> {
    return super.deploy(overrides || {}) as Promise<RosalindTestLab>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RosalindTestLab {
    return super.attach(address) as RosalindTestLab;
  }
  connect(signer: Signer): RosalindTestLab__factory {
    return super.connect(signer) as RosalindTestLab__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RosalindTestLabInterface {
    return new utils.Interface(_abi) as RosalindTestLabInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RosalindTestLab {
    return new Contract(address, _abi, signerOrProvider) as RosalindTestLab;
  }
}
