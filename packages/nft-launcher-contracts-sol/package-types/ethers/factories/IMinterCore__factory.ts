/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IMinterCore, IMinterCoreInterface } from "../IMinterCore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "createSpecies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
    ],
    name: "getSpecies",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IMinterCore__factory {
  static readonly abi = _abi;
  static createInterface(): IMinterCoreInterface {
    return new utils.Interface(_abi) as IMinterCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMinterCore {
    return new Contract(address, _abi, signerOrProvider) as IMinterCore;
  }
}
