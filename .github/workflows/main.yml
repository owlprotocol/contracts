name: Default Actions

on:
  push:
    branches:
      - master
      - develop
  pull_request: ~

env:
  PRIV_KEY: ${{ secrets.PRIV_KEY }}
  PROXY_PRIV_KEY: ${{ secrets.PROXY_PRIV_KEY }}
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  MOONBEAM_API_KEY: ${{ secrets.MOONBEAM_API_KEY }}
  MOONRIVER_API_KEY: ${{ secrets.MOONRIVER_API_KEY }}
  AURORA_API_KEY: ${{ secrets.AURORA_API_KEY }}
  FANTOM_API_KEY: ${{ secrets.FANTOM_API_KEY }}
  AVAX_API_KEY: ${{ secrets.AVAX_API_KEY }}
  OPTIMISM_API_KEY: ${{ secrets.OPTIMISM_API_KEY }}
  ARBITRUM_API_KEY: ${{ secrets.ARBITRUM_API_KEY }}
  BINANCE_API_KEY: ${{ secrets.BINANCE_API_KEY }}
  POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
  MAINNET_API_KEY: ${{ secrets.MAINNET_API_KEY }}
  OTHER_PRIV_KEY: ${{ secrets.OTHER_PRIV_KEY }}
  isGSN: false
  CONTRACTS_CACHE: "./packages/owlprotocol-contracts/cache"
  CONTRACTS_ARTIFACTS: "./packages/owlprotocol-contracts/artifacts"
  CONTRACTS_TYPECHAIN: "./packages/owlprotocol-contracts/typechain"

jobs:
  run-coverage:
    name: Run Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - uses: actions/cache@v3
        name: Hardhat cache
        with:
          path: |
            ${{ env.CONTRACTS_CACHE }}
            ${{ env.CONTRACTS_ARTIFACTS }}
            ${{ env.CONTRACTS_TYPECHAIN }}
          key: hardhat-cache-${{ hashFiles('**/*.sol') }}
          restore-keys: |
            hardhat-cache-

      - name: Build contracts
        run: pnpm run build

      - name: Run coverage
        run: pnpm run coverage

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - uses: actions/cache@v3
        name: Hardhat cache
        with:
          path: |
            ${{ env.CONTRACTS_CACHE }}
            ${{ env.CONTRACTS_ARTIFACTS }}
            ${{ env.CONTRACTS_TYPECHAIN }}
          key: hardhat-cache-${{ hashFiles('**/*.sol') }}
          restore-keys: |
            hardhat-cache-

      - name: Build contracts
        run: pnpm run build

      - name: Run tests
        run: pnpm run test
