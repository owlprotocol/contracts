"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[1102],{7522:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,g=c["".concat(u,".").concat(m)]||c[m]||d[m]||l;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8075:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(2875),a=n(358),l=(n(9901),n(7522)),i=["components"],o={},u=void 0,s={unversionedId:"contract-docs/PluginsCore",id:"contract-docs/PluginsCore",title:"PluginsCore",description:"PluginsCore",source:"@site/docs/contract-docs/PluginsCore.md",sourceDirName:"contract-docs",slug:"/contract-docs/PluginsCore",permalink:"/contracts/docs/contract-docs/PluginsCore",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/PluginsCore.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OwlPaymasterBase",permalink:"/contracts/docs/contract-docs/OwlPaymasterBase"},next:{title:"Probability",permalink:"/contracts/docs/contract-docs/Probability"}},p={},d=[{value:"PluginsCore",id:"pluginscore",level:2},{value:"RouterError",id:"routererror",level:3},{value:"ConsumableType",id:"consumabletype",level:3},{value:"TokenType",id:"tokentype",level:3},{value:"Ingredient",id:"ingredient",level:3},{value:"nUse",id:"nuse",level:3},{value:"usedERC721Inputs",id:"usederc721inputs",level:3},{value:"_useInputs",id:"_useinputs",level:3},{value:"_validateInputs",id:"_validateinputs",level:3},{value:"__gap",id:"__gap",level:3}],c={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"pluginscore"},"PluginsCore"),(0,l.kt)("p",null,"Abstract contract with types and utilities that will be used by many (if\nnot all) Plugins contracts"),(0,l.kt)("h3",{id:"routererror"},"RouterError"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RouterError(uint256 routeId, address sender, bytes data)\n")),(0,l.kt)("h3",{id:"consumabletype"},"ConsumableType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum ConsumableType {\n  unaffected,\n  burned,\n  NTime\n}\n")),(0,l.kt)("h3",{id:"tokentype"},"TokenType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum TokenType {\n  erc20,\n  erc721,\n  erc1155\n}\n")),(0,l.kt)("h3",{id:"ingredient"},"Ingredient"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Ingredient {\n  enum PluginsCore.TokenType token;\n  enum PluginsCore.ConsumableType consumableType;\n  address contractAddr;\n  uint256[] amounts;\n  uint256[] tokenIds;\n}\n")),(0,l.kt)("h3",{id:"nuse"},"nUse"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) nUse\n")),(0,l.kt)("h3",{id:"usederc721inputs"},"usedERC721Inputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => mapping(uint256 => uint256)) usedERC721Inputs\n")),(0,l.kt)("h3",{id:"_useinputs"},"_useInputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _useInputs(struct PluginsCore.Ingredient[] inputs, address from, address burnAddress, uint256[][] _inputERC721Ids, uint256 amount) internal\n")),(0,l.kt)("p",null,"will use/consume inputs as dicatated by the configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputs"),(0,l.kt)("td",{parentName:"tr",align:null},"struct PluginsCore.Ingredient[]"),(0,l.kt)("td",{parentName:"tr",align:null},"set of inputs in the configuration")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address to use/consume inputs from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"burnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"in case configuration requires a burn address to transfer items to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputERC721Ids"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[][]"),(0,l.kt)("td",{parentName:"tr",align:null},"set of ERC721 ",(0,l.kt)("inlineCode",{parentName:"td"},"tokenId"),"s, if applicable Example of ",(0,l.kt)("inlineCode",{parentName:"td"},"_inputERC721Ids")," with ",(0,l.kt)("inlineCode",{parentName:"td"},"amount = 2")," with 3 ",(0,l.kt)("inlineCode",{parentName:"td"},"Ingredient"),"s in ",(0,l.kt)("inlineCode",{parentName:"td"},"inputs")," with ",(0,l.kt)("inlineCode",{parentName:"td"},"TokenType.ERC721")," ",(0,l.kt)("inlineCode",{parentName:"td"},"[  [1, 2]  [3, 4]  [5, 6] ]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"sets of inputs to use/consume")))),(0,l.kt)("h3",{id:"_validateinputs"},"_validateInputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _validateInputs(struct PluginsCore.Ingredient[] _inputs, struct PluginsCore.Ingredient[] inputs) internal\n")),(0,l.kt)("p",null,"validates inputs array of ingredients"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputs"),(0,l.kt)("td",{parentName:"tr",align:null},"struct PluginsCore.Ingredient[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the inputted array to the Crafter initializer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputs"),(0,l.kt)("td",{parentName:"tr",align:null},"struct PluginsCore.Ingredient[]"),(0,l.kt)("td",{parentName:"tr",align:null},"storage array of inputs, copied from _inputs")))),(0,l.kt)("h3",{id:"__gap"},"__gap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[48] __gap\n")))}m.isMDXComponent=!0}}]);