"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[9177],{7522:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(9901);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(a),m=r,k=p["".concat(d,".").concat(m)]||p[m]||c[m]||i;return a?n.createElement(k,l(l({ref:t},u),{},{components:a})):n.createElement(k,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},3430:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(2875),r=a(358),i=(a(9901),a(7522)),l=["components"],o={},d=void 0,s={unversionedId:"contract-docs/RouteRandomizer",id:"contract-docs/RouteRandomizer",title:"RouteRandomizer",description:"RouteRandomizer",source:"@site/docs/contract-docs/RouteRandomizer.md",sourceDirName:"contract-docs",slug:"/contract-docs/RouteRandomizer",permalink:"/contracts/docs/contract-docs/RouteRandomizer",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/RouteRandomizer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RosalindTestLab",permalink:"/contracts/docs/contract-docs/RosalindTestLab"},next:{title:"SourceRandom",permalink:"/contracts/docs/contract-docs/SourceRandom"}},u={},c=[{value:"RouteRandomizer",id:"routerandomizer",level:2},{value:"version",id:"version",level:3},{value:"ERC165TAG",id:"erc165tag",level:3},{value:"RouteElement",id:"routeelement",level:3},{value:"contracts",id:"contracts",level:3},{value:"signatures",id:"signatures",level:3},{value:"probabilities",id:"probabilities",level:3},{value:"vrfBeacon",id:"vrfbeacon",level:3},{value:"elements",id:"elements",level:3},{value:"queueIndex",id:"queueindex",level:3},{value:"constructor",id:"constructor",level:3},{value:"initialize",id:"initialize",level:3},{value:"proxyInitialize",id:"proxyinitialize",level:3},{value:"__RouteRandomizer_init",id:"__routerandomizer_init",level:3},{value:"__RouteRandomizer_init_unchained",id:"__routerandomizer_init_unchained",level:3},{value:"requestRouteRandomize",id:"requestrouterandomize",level:3},{value:"checkUpkeep",id:"checkupkeep",level:3},{value:"performUpkeep",id:"performupkeep",level:3},{value:"_routeRandomize",id:"_routerandomize",level:3},{value:"getRandomContract",id:"getrandomcontract",level:3},{value:"getQueueIndex",id:"getqueueindex",level:3},{value:"supportsInterface",id:"supportsinterface",level:3}],p={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"routerandomizer"},"RouteRandomizer"),(0,i.kt)("h3",{id:"version"},"version"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"string version\n")),(0,i.kt)("h3",{id:"erc165tag"},"ERC165TAG"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC165TAG\n")),(0,i.kt)("h3",{id:"routeelement"},"RouteElement"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"struct RouteElement {\n  uint256 epochBlock;\n  bytes[] args;\n}\n")),(0,i.kt)("h3",{id:"contracts"},"contracts"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address[] contracts\n")),(0,i.kt)("h3",{id:"signatures"},"signatures"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes[] signatures\n")),(0,i.kt)("h3",{id:"probabilities"},"probabilities"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[] probabilities\n")),(0,i.kt)("h3",{id:"vrfbeacon"},"vrfBeacon"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address vrfBeacon\n")),(0,i.kt)("h3",{id:"elements"},"elements"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"struct RouteRandomizer.RouteElement[] elements\n")),(0,i.kt)("h3",{id:"queueindex"},"queueIndex"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 queueIndex\n")),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,i.kt)("h3",{id:"initialize"},"initialize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _admin, address[] _contracts, bytes[] _signatures, uint8[] _probabilities, address _vrfBeacon, address _forwarder) external\n")),(0,i.kt)("p",null,"Create RouteRandomizer instance"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_admin"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"the admin/owner of the contract")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_contracts"),(0,i.kt)("td",{parentName:"tr",align:null},"address[]"),(0,i.kt)("td",{parentName:"tr",align:null},"array of contract addresses to route to, each instance is defined with unique recipe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_signatures"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes[]"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes array representing function signatures for each contract")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_probabilities"),(0,i.kt)("td",{parentName:"tr",align:null},"uint8[]"),(0,i.kt)("td",{parentName:"tr",align:null},"array of cumulative proababilities associated with using a contract from contracts")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_vrfBeacon"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_forwarder"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"address for trusted forwarder for open GSN integration")))),(0,i.kt)("h3",{id:"proxyinitialize"},"proxyInitialize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function proxyInitialize(address _admin, address[] _contracts, bytes[] _signatures, uint8[] _probabilities, address _vrfBeacon, address _forwarder) external\n")),(0,i.kt)("h3",{id:"__routerandomizer_init"},"__RouteRandomizer_init"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __RouteRandomizer_init(address _admin, address[] _contracts, bytes[] _signatures, uint8[] _probabilities, address _vrfBeacon, address _forwarder) internal\n")),(0,i.kt)("h3",{id:"__routerandomizer_init_unchained"},"__RouteRandomizer_init_unchained"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __RouteRandomizer_init_unchained(address[] _contracts, bytes[] _signatures, uint8[] _probabilities, address _vrfBeacon) internal\n")),(0,i.kt)("h3",{id:"requestrouterandomize"},"requestRouteRandomize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestRouteRandomize(bytes[] argsArr) external returns (uint256 requestId, uint256 blockNumber)\n")),(0,i.kt)("h3",{id:"checkupkeep"},"checkUpkeep"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkUpkeep(bytes) external view returns (bool upkeepNeeded, bytes performData)\n")),(0,i.kt)("h3",{id:"performupkeep"},"performUpkeep"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function performUpkeep(bytes performData) external\n")),(0,i.kt)("p",null,"method that is actually executed by the keepers, via the registry.\nThe data returned by the checkUpkeep simulation will be passed into\nthis method to actually be executed."),(0,i.kt)("p",null,"The input to this method should not be trusted, and the caller of the\nmethod should not even be restricted to any single registry. Anyone should\nbe able call it, and the input should be validated, there is no guarantee\nthat the data passed in is the performData returned from checkUpkeep. This\ncould happen due to malicious keepers, racing keepers, or simply a state\nchange while the performUpkeep transaction is waiting for confirmation.\nAlways validate the data passed in."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"performData"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes"),(0,i.kt)("td",{parentName:"tr",align:null},"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling ",(0,i.kt)("inlineCode",{parentName:"td"},"abi.decode"),". This data should not be trusted, and should be validated against the contract's current state.")))),(0,i.kt)("h3",{id:"_routerandomize"},"_routeRandomize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function _routeRandomize(bytes[] argsArr, uint256 randomSeed) internal\n")),(0,i.kt)("h3",{id:"getrandomcontract"},"getRandomContract"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRandomContract(uint256 queueIndex, uint256 randomSeed) external view returns (uint256 selectedContract)\n")),(0,i.kt)("h3",{id:"getqueueindex"},"getQueueIndex"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getQueueIndex() public view returns (uint256)\n")),(0,i.kt)("h3",{id:"supportsinterface"},"supportsInterface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,i.kt)("p",null,"ERC165 Support"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,i.kt)("td",{parentName:"tr",align:null},"hash of the interface testing for")))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[0]"),(0,i.kt)("td",{parentName:"tr",align:null},"bool"),(0,i.kt)("td",{parentName:"tr",align:null},"bool whether interface is supported")))))}m.isMDXComponent=!0}}]);