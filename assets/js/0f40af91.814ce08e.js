"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[6233],{7522:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>p});var r=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,k=u["".concat(d,".").concat(p)]||u[p]||m[p]||i;return n?r.createElement(k,o(o({ref:t},s),{},{components:n})):r.createElement(k,o({ref:t},s))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},853:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var r=n(2875),a=n(358),i=(n(9901),n(7522)),o=["components"],l={},d=void 0,c={unversionedId:"contract-docs/MinterCore",id:"contract-docs/MinterCore",title:"MinterCore",description:"MinterCore",source:"@site/docs/contract-docs/MinterCore.md",sourceDirName:"contract-docs",slug:"/contract-docs/MinterCore",permalink:"/contracts/docs/contract-docs/MinterCore",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/MinterCore.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MinterBreeding",permalink:"/contracts/docs/contract-docs/MinterBreeding"},next:{title:"MinterRandom",permalink:"/contracts/docs/contract-docs/MinterRandom"}},s={},m=[{value:"MinterCore",id:"mintercore",level:2},{value:"mintFeeToken",id:"mintfeetoken",level:3},{value:"mintFeeAddress",id:"mintfeeaddress",level:3},{value:"mintFeeAmount",id:"mintfeeamount",level:3},{value:"nftContractAddr",id:"nftcontractaddr",level:3},{value:"__MinterCore_init",id:"__mintercore_init",level:3},{value:"__MinterCore_init_unchained",id:"__mintercore_init_unchained",level:3},{value:"_mintForFee",id:"_mintforfee",level:3},{value:"_safeMintForFee",id:"_safemintforfee",level:3},{value:"__gap",id:"__gap",level:3}],u={toc:m};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"mintercore"},"MinterCore"),(0,i.kt)("p",null,"Decentralized NFT Minter contract"),(0,i.kt)("h3",{id:"mintfeetoken"},"mintFeeToken"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address mintFeeToken\n")),(0,i.kt)("h3",{id:"mintfeeaddress"},"mintFeeAddress"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address mintFeeAddress\n")),(0,i.kt)("h3",{id:"mintfeeamount"},"mintFeeAmount"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 mintFeeAmount\n")),(0,i.kt)("h3",{id:"nftcontractaddr"},"nftContractAddr"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address nftContractAddr\n")),(0,i.kt)("h3",{id:"__mintercore_init"},"__MinterCore_init"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __MinterCore_init(address _admin, address _mintFeeToken, address _mintFeeAddress, uint256 _mintFeeAmount, address _nftContractAddr, address _forwarder) internal\n")),(0,i.kt)("h3",{id:"__mintercore_init_unchained"},"__MinterCore_init_unchained"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __MinterCore_init_unchained(address _mintFeeToken, address _mintFeeAddress, uint256 _mintFeeAmount, address _nftContractAddr) internal\n")),(0,i.kt)("h3",{id:"_mintforfee"},"_mintForFee"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mintForFee(address buyer, uint256 tokenId) internal\n")),(0,i.kt)("p",null,"Base minting function (not safeMint). Called\nby implementation contracts."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"buyer"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"who's paying the ERC20 fee / gets the ERC721 token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the token identifier to mint")))),(0,i.kt)("h3",{id:"_safemintforfee"},"_safeMintForFee"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function _safeMintForFee(address buyer, uint256 tokenId) internal\n")),(0,i.kt)("p",null,"Base minting function (safeMint). Called\nby implementation contracts."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"buyer"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"who's paying the ERC20 fee / gets the ERC721 token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the token identifier to mint")))),(0,i.kt)("h3",{id:"__gap"},"__gap"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[46] __gap\n")))}p.isMDXComponent=!0}}]);