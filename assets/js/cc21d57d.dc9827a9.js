"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[5675],{7522:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(9901);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),o=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=o(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=o(a),m=r,g=p["".concat(d,".").concat(m)]||p[m]||c[m]||i;return a?n.createElement(g,l(l({ref:t},u),{},{components:a})):n.createElement(g,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5677:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(2875),r=a(358),i=(a(9901),a(7522)),l=["components"],s={},d=void 0,o={unversionedId:"contract-docs/EnglishAuction",id:"contract-docs/EnglishAuction",title:"EnglishAuction",description:"EnglishAuction",source:"@site/docs/contract-docs/EnglishAuction.md",sourceDirName:"contract-docs",slug:"/contract-docs/EnglishAuction",permalink:"/contracts/docs/contract-docs/EnglishAuction",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/EnglishAuction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ERC721OwlExpiring",permalink:"/contracts/docs/contract-docs/ERC721OwlExpiring"},next:{title:"FactoryERC1155",permalink:"/contracts/docs/contract-docs/FactoryERC1155"}},u={},c=[{value:"EnglishAuction",id:"englishauction",level:2},{value:"version",id:"version",level:3},{value:"ERC165TAG",id:"erc165tag",level:3},{value:"Start",id:"start",level:3},{value:"Bid",id:"bid",level:3},{value:"Withdraw",id:"withdraw",level:3},{value:"asset",id:"asset",level:3},{value:"acceptableToken",id:"acceptabletoken",level:3},{value:"seller",id:"seller",level:3},{value:"saleFeeAddress",id:"salefeeaddress",level:3},{value:"ownerClaimed",id:"ownerclaimed",level:3},{value:"winnerClaimed",id:"winnerclaimed",level:3},{value:"endAt",id:"endat",level:3},{value:"auctionDuration",id:"auctionduration",level:3},{value:"startPrice",id:"startprice",level:3},{value:"resetTime",id:"resettime",level:3},{value:"saleFee",id:"salefee",level:3},{value:"highestBidder",id:"highestbidder",level:3},{value:"bids",id:"bids",level:3},{value:"constructor",id:"constructor",level:3},{value:"initialize",id:"initialize",level:3},{value:"proxyInitialize",id:"proxyinitialize",level:3},{value:"__EnglishAuction_init",id:"__englishauction_init",level:3},{value:"__EnglishAuction_init_unchained",id:"__englishauction_init_unchained",level:3},{value:"bid",id:"bid-1",level:3},{value:"withdraw",id:"withdraw-1",level:3},{value:"ownerClaim",id:"ownerclaim",level:3},{value:"winnerClaim",id:"winnerclaim",level:3},{value:"getCurrentBid",id:"getcurrentbid",level:3},{value:"getRemainingTime",id:"getremainingtime",level:3},{value:"supportsInterface",id:"supportsinterface",level:3}],p={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"englishauction"},"EnglishAuction"),(0,i.kt)("p",null,"This contract is a standard English Auction smart contract that allows\nbidders to keep bidding until the highest bidder wins the asset. In an\nEnglish Auction, the owner defines the starting price and bidders can make\nbids that are higher than the current price.",(0,i.kt)("em",{parentName:"p"}," The auction duration is defined\nby the bids being made and if they are made within the resetTime.\nTheoretically, the auction can go on forever if higher bids continue to be\nmade within the resetTime period.")," Once the ending time is passed, the\nauction finishes and the NFT is transferred to the highest bidder."),(0,i.kt)("h3",{id:"version"},"version"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"string version\n")),(0,i.kt)("h3",{id:"erc165tag"},"ERC165TAG"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC165TAG\n")),(0,i.kt)("h3",{id:"start"},"Start"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"event Start(uint256 startTime)\n")),(0,i.kt)("h3",{id:"bid"},"Bid"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"event Bid(address sender, uint256 amount)\n")),(0,i.kt)("h3",{id:"withdraw"},"Withdraw"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"event Withdraw(address bidder, uint256 amount)\n")),(0,i.kt)("h3",{id:"asset"},"asset"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AuctionLib.Asset asset\n")),(0,i.kt)("h3",{id:"acceptabletoken"},"acceptableToken"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address acceptableToken\n")),(0,i.kt)("h3",{id:"seller"},"seller"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address payable seller\n")),(0,i.kt)("h3",{id:"salefeeaddress"},"saleFeeAddress"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address payable saleFeeAddress\n")),(0,i.kt)("h3",{id:"ownerclaimed"},"ownerClaimed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bool ownerClaimed\n")),(0,i.kt)("h3",{id:"winnerclaimed"},"winnerClaimed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bool winnerClaimed\n")),(0,i.kt)("h3",{id:"endat"},"endAt"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 endAt\n")),(0,i.kt)("h3",{id:"auctionduration"},"auctionDuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 auctionDuration\n")),(0,i.kt)("h3",{id:"startprice"},"startPrice"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 startPrice\n")),(0,i.kt)("h3",{id:"resettime"},"resetTime"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 resetTime\n")),(0,i.kt)("h3",{id:"salefee"},"saleFee"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 saleFee\n")),(0,i.kt)("h3",{id:"highestbidder"},"highestBidder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address highestBidder\n")),(0,i.kt)("h3",{id:"bids"},"bids"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint256) bids\n")),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,i.kt)("h3",{id:"initialize"},"initialize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address payable _seller, struct AuctionLib.Asset _asset, address ERC20contractAddress, uint256 _startPrice, uint256 _auctionDuration, uint256 _resetTime, uint256 _saleFee, address payable _saleFeeAddress, address _forwarder) external\n")),(0,i.kt)("p",null,"Create English Auction instance"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_seller"),(0,i.kt)("td",{parentName:"tr",align:null},"address payable"),(0,i.kt)("td",{parentName:"tr",align:null},"address of seller for auction")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_asset"),(0,i.kt)("td",{parentName:"tr",align:null},"struct AuctionLib.Asset"),(0,i.kt)("td",{parentName:"tr",align:null},"struct containing information of the asset to be listed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"ERC20contractAddress"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"address of ERC20 token accepted as payment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_startPrice"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"start bid on nft")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_auctionDuration"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"duration of auction (in seconds)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_resetTime"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"time at which the auction resets when a bid is made within this time frame (in seconds)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_saleFee"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the percentage of the sale to be sent to the marketplace as commission")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_saleFeeAddress"),(0,i.kt)("td",{parentName:"tr",align:null},"address payable"),(0,i.kt)("td",{parentName:"tr",align:null},"the address to which the sale fee is sent")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"_forwarder"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"the address for the Trusted Forwarder for Open GSN integration")))),(0,i.kt)("h3",{id:"proxyinitialize"},"proxyInitialize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function proxyInitialize(address payable _seller, struct AuctionLib.Asset _asset, address ERC20contractAddress, uint256 _startPrice, uint256 _auctionDuration, uint256 _resetTime, uint256 _saleFee, address payable _saleFeeAddress, address _forwarder) external\n")),(0,i.kt)("h3",{id:"__englishauction_init"},"__EnglishAuction_init"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __EnglishAuction_init(address payable _seller, struct AuctionLib.Asset _asset, address ERC20contractAddress, uint256 _startPrice, uint256 _auctionDuration, uint256 _resetTime, uint256 _saleFee, address payable _saleFeeAddress, address _forwarder) internal\n")),(0,i.kt)("h3",{id:"__englishauction_init_unchained"},"__EnglishAuction_init_unchained"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __EnglishAuction_init_unchained(address payable _seller, struct AuctionLib.Asset _asset, address ERC20contractAddress, uint256 _startPrice, uint256 _auctionDuration, uint256 _resetTime, uint256 _saleFee, address payable _saleFeeAddress) internal\n")),(0,i.kt)("h3",{id:"bid-1"},"bid"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function bid(uint256 amount) external\n")),(0,i.kt)("p",null,"Allow a user to place a bid that must be higher than the highest bid"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"amount"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"to bid by the bidder")))),(0,i.kt)("h3",{id:"withdraw-1"},"withdraw"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw() external\n")),(0,i.kt)("p",null,"Highest bidder cannot withdraw"),(0,i.kt)("p",null,"Allows a user to withdraw their bid."),(0,i.kt)("h3",{id:"ownerclaim"},"ownerClaim"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownerClaim() external\n")),(0,i.kt)("p",null,"Allows owner to claim bid.\nThe seller must call to transfer the ERC20 to themselves"),(0,i.kt)("h3",{id:"winnerclaim"},"winnerClaim"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function winnerClaim() external\n")),(0,i.kt)("p",null,"Allows auction winner to claim the asset they won and transfers ownership"),(0,i.kt)("h3",{id:"getcurrentbid"},"getCurrentBid"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCurrentBid() external view returns (uint256)\n")),(0,i.kt)("p",null,"Returns the current highest bid"),(0,i.kt)("h3",{id:"getremainingtime"},"getRemainingTime"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRemainingTime() external view returns (uint256)\n")),(0,i.kt)("p",null,"Returns the remaining time in the auction"),(0,i.kt)("h3",{id:"supportsinterface"},"supportsInterface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,i.kt)("p",null,"ERC165 Support"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,i.kt)("td",{parentName:"tr",align:null},"hash of the interface testing for")))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[0]"),(0,i.kt)("td",{parentName:"tr",align:null},"bool"),(0,i.kt)("td",{parentName:"tr",align:null},"bool whether interface is supported")))))}m.isMDXComponent=!0}}]);