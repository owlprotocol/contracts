"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[9621],{7522:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var a=n(9901);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),p=u(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(k,o(o({ref:e},c),{},{components:n})):a.createElement(k,o({ref:e},c))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6988:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var a=n(2875),r=n(358),l=(n(9901),n(7522)),o=["components"],i={},s=void 0,u={unversionedId:"contract-docs/FactoryERC1155",id:"contract-docs/FactoryERC1155",title:"FactoryERC1155",description:"FactoryERC1155",source:"@site/docs/contract-docs/FactoryERC1155.md",sourceDirName:"contract-docs",slug:"/contract-docs/FactoryERC1155",permalink:"/contracts/docs/contract-docs/FactoryERC1155",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/FactoryERC1155.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EnglishAuction",permalink:"/contracts/docs/contract-docs/EnglishAuction"},next:{title:"FactoryERC20",permalink:"/contracts/docs/contract-docs/FactoryERC20"}},c={},d=[{value:"FactoryERC1155",id:"factoryerc1155",level:2},{value:"lastTokenId",id:"lasttokenid",level:3},{value:"defaultTokenMint",id:"defaulttokenmint",level:3},{value:"constructor",id:"constructor",level:3},{value:"mintTokens",id:"minttokens",level:3},{value:"mint",id:"mint",level:3},{value:"mintBatch",id:"mintbatch",level:3},{value:"setTrustedForwarder",id:"settrustedforwarder",level:3},{value:"_msgSender",id:"_msgsender",level:3},{value:"_msgData",id:"_msgdata",level:3},{value:"versionRecipient",id:"versionrecipient",level:3}],p={toc:d};function m(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"factoryerc1155"},"FactoryERC1155"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"INTERNAL TOOL"),"\nUsed to factory ERC721 NFTs for unit testing"),(0,l.kt)("h3",{id:"lasttokenid"},"lastTokenId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 lastTokenId\n")),(0,l.kt)("h3",{id:"defaulttokenmint"},"defaultTokenMint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 defaultTokenMint\n")),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(string uri, uint256[] initialMint) public\n")),(0,l.kt)("p",null,"Creates ERC721 token"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uri"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"associate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"initialMint"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"minttokens"},"mintTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintTokens(uint256[] amounts) public\n")),(0,l.kt)("p",null,"Creates and gives a token to whoever calls the method"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of token amounts to mint for each tokenID")))),(0,l.kt)("h3",{id:"mint"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 tokenId, uint256 amount) public\n")),(0,l.kt)("p",null,"Mints a token and assigns it to ",(0,l.kt)("inlineCode",{parentName:"p"},"to"),".\ndoesn't require permissions."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"add")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"mintbatch"},"mintBatch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data) public\n")),(0,l.kt)("p",null,"Must have MINTER_ROLE"),(0,l.kt)("p",null,"Allows caller to mint NFTs (safeMint)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ids"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"id values")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"to mint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"for hooks")))),(0,l.kt)("h3",{id:"settrustedforwarder"},"setTrustedForwarder"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTrustedForwarder(address forwarder) public\n")),(0,l.kt)("h3",{id:"_msgsender"},"_msgSender"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _msgSender() internal view returns (address sender)\n")),(0,l.kt)("p",null,"the following 3 functions are all required for OpenGSN integration"),(0,l.kt)("h3",{id:"_msgdata"},"_msgData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _msgData() internal view returns (bytes)\n")),(0,l.kt)("h3",{id:"versionrecipient"},"versionRecipient"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function versionRecipient() external pure returns (string)\n")))}m.isMDXComponent=!0}}]);