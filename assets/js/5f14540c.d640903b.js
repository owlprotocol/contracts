"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[6790],{7522:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(9901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,k=c["".concat(o,".").concat(m)]||c[m]||p[m]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=n(2875),r=n(358),l=(n(9901),n(7522)),i=["components"],s={},o=void 0,u={unversionedId:"contract-docs/VRFCoordinatorV2",id:"contract-docs/VRFCoordinatorV2",title:"VRFCoordinatorV2",description:"VRFCoordinatorV2",source:"@site/docs/contract-docs/VRFCoordinatorV2.md",sourceDirName:"contract-docs",slug:"/contract-docs/VRFCoordinatorV2",permalink:"/contracts/docs/contract-docs/VRFCoordinatorV2",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/VRFCoordinatorV2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VRFBeacon",permalink:"/contracts/docs/contract-docs/VRFBeacon"}},d={},p=[{value:"VRFCoordinatorV2",id:"vrfcoordinatorv2",level:2},{value:"LINK",id:"link",level:3},{value:"LINK_ETH_FEED",id:"link_eth_feed",level:3},{value:"BLOCKHASH_STORE",id:"blockhash_store",level:3},{value:"MAX_CONSUMERS",id:"max_consumers",level:3},{value:"TooManyConsumers",id:"toomanyconsumers",level:3},{value:"InsufficientBalance",id:"insufficientbalance",level:3},{value:"InvalidConsumer",id:"invalidconsumer",level:3},{value:"InvalidSubscription",id:"invalidsubscription",level:3},{value:"OnlyCallableFromLink",id:"onlycallablefromlink",level:3},{value:"InvalidCalldata",id:"invalidcalldata",level:3},{value:"MustBeSubOwner",id:"mustbesubowner",level:3},{value:"PendingRequestExists",id:"pendingrequestexists",level:3},{value:"MustBeRequestedOwner",id:"mustberequestedowner",level:3},{value:"BalanceInvariantViolated",id:"balanceinvariantviolated",level:3},{value:"FundsRecovered",id:"fundsrecovered",level:3},{value:"Subscription",id:"subscription",level:3},{value:"SubscriptionConfig",id:"subscriptionconfig",level:3},{value:"s_consumers",id:"s_consumers",level:3},{value:"s_subscriptionConfigs",id:"s_subscriptionconfigs",level:3},{value:"s_subscriptions",id:"s_subscriptions",level:3},{value:"s_currentSubId",id:"s_currentsubid",level:3},{value:"s_totalBalance",id:"s_totalbalance",level:3},{value:"SubscriptionCreated",id:"subscriptioncreated",level:3},{value:"SubscriptionFunded",id:"subscriptionfunded",level:3},{value:"SubscriptionConsumerAdded",id:"subscriptionconsumeradded",level:3},{value:"SubscriptionConsumerRemoved",id:"subscriptionconsumerremoved",level:3},{value:"SubscriptionCanceled",id:"subscriptioncanceled",level:3},{value:"SubscriptionOwnerTransferRequested",id:"subscriptionownertransferrequested",level:3},{value:"SubscriptionOwnerTransferred",id:"subscriptionownertransferred",level:3},{value:"MAX_REQUEST_CONFIRMATIONS",id:"max_request_confirmations",level:3},{value:"MAX_NUM_WORDS",id:"max_num_words",level:3},{value:"GAS_FOR_CALL_EXACT_CHECK",id:"gas_for_call_exact_check",level:3},{value:"InvalidRequestConfirmations",id:"invalidrequestconfirmations",level:3},{value:"GasLimitTooBig",id:"gaslimittoobig",level:3},{value:"NumWordsTooBig",id:"numwordstoobig",level:3},{value:"ProvingKeyAlreadyRegistered",id:"provingkeyalreadyregistered",level:3},{value:"NoSuchProvingKey",id:"nosuchprovingkey",level:3},{value:"InvalidLinkWeiPrice",id:"invalidlinkweiprice",level:3},{value:"InsufficientGasForConsumer",id:"insufficientgasforconsumer",level:3},{value:"NoCorrespondingRequest",id:"nocorrespondingrequest",level:3},{value:"IncorrectCommitment",id:"incorrectcommitment",level:3},{value:"BlockhashNotInStore",id:"blockhashnotinstore",level:3},{value:"PaymentTooLarge",id:"paymenttoolarge",level:3},{value:"Reentrant",id:"reentrant",level:3},{value:"RequestCommitment",id:"requestcommitment",level:3},{value:"s_provingKeys",id:"s_provingkeys",level:3},{value:"s_provingKeyHashes",id:"s_provingkeyhashes",level:3},{value:"s_withdrawableTokens",id:"s_withdrawabletokens",level:3},{value:"s_requestCommitments",id:"s_requestcommitments",level:3},{value:"ProvingKeyRegistered",id:"provingkeyregistered",level:3},{value:"ProvingKeyDeregistered",id:"provingkeyderegistered",level:3},{value:"RandomWordsRequested",id:"randomwordsrequested",level:3},{value:"RandomWordsFulfilled",id:"randomwordsfulfilled",level:3},{value:"Config",id:"config",level:3},{value:"s_fallbackWeiPerUnitLink",id:"s_fallbackweiperunitlink",level:3},{value:"s_config",id:"s_config",level:3},{value:"s_feeConfig",id:"s_feeconfig",level:3},{value:"FeeConfig",id:"feeconfig",level:3},{value:"ConfigSet",id:"configset",level:3},{value:"Request",id:"request",level:3},{value:"s_requests",id:"s_requests",level:3},{value:"constructor",id:"constructor",level:3},{value:"registerProvingKey",id:"registerprovingkey",level:3},{value:"deregisterProvingKey",id:"deregisterprovingkey",level:3},{value:"hashOfKey",id:"hashofkey",level:3},{value:"setConfig",id:"setconfig",level:3},{value:"getConfig",id:"getconfig",level:3},{value:"getFeeConfig",id:"getfeeconfig",level:3},{value:"getTotalBalance",id:"gettotalbalance",level:3},{value:"getFallbackWeiPerUnitLink",id:"getfallbackweiperunitlink",level:3},{value:"ownerCancelSubscription",id:"ownercancelsubscription",level:3},{value:"recoverFunds",id:"recoverfunds",level:3},{value:"getRequestConfig",id:"getrequestconfig",level:3},{value:"requestRandomWords",id:"requestrandomwords",level:3},{value:"getCommitment",id:"getcommitment",level:3},{value:"computeRequestId",id:"computerequestid",level:3},{value:"callWithExactGas",id:"callwithexactgas",level:3},{value:"getFeeTier",id:"getfeetier",level:3},{value:"fulfillRandomWords",id:"fulfillrandomwords",level:3},{value:"calculatePaymentAmount",id:"calculatepaymentamount",level:3},{value:"getFeedData",id:"getfeeddata",level:3},{value:"oracleWithdraw",id:"oraclewithdraw",level:3},{value:"onTokenTransfer",id:"ontokentransfer",level:3},{value:"getCurrentSubId",id:"getcurrentsubid",level:3},{value:"getSubscription",id:"getsubscription",level:3},{value:"createSubscription",id:"createsubscription",level:3},{value:"requestSubscriptionOwnerTransfer",id:"requestsubscriptionownertransfer",level:3},{value:"acceptSubscriptionOwnerTransfer",id:"acceptsubscriptionownertransfer",level:3},{value:"removeConsumer",id:"removeconsumer",level:3},{value:"addConsumer",id:"addconsumer",level:3},{value:"cancelSubscription",id:"cancelsubscription",level:3},{value:"cancelSubscriptionHelper",id:"cancelsubscriptionhelper",level:3},{value:"onlySubOwner",id:"onlysubowner",level:3},{value:"nonReentrant",id:"nonreentrant",level:3},{value:"typeAndVersion",id:"typeandversion",level:3}],c={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"vrfcoordinatorv2"},"VRFCoordinatorV2"),(0,l.kt)("h3",{id:"link"},"LINK"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LinkTokenInterface LINK\n")),(0,l.kt)("h3",{id:"link_eth_feed"},"LINK_ETH_FEED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AggregatorV3Interface LINK_ETH_FEED\n")),(0,l.kt)("h3",{id:"blockhash_store"},"BLOCKHASH_STORE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract BlockhashStoreInterface BLOCKHASH_STORE\n")),(0,l.kt)("h3",{id:"max_consumers"},"MAX_CONSUMERS"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 MAX_CONSUMERS\n")),(0,l.kt)("h3",{id:"toomanyconsumers"},"TooManyConsumers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error TooManyConsumers()\n")),(0,l.kt)("h3",{id:"insufficientbalance"},"InsufficientBalance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InsufficientBalance()\n")),(0,l.kt)("h3",{id:"invalidconsumer"},"InvalidConsumer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidConsumer(uint64 subId, address consumer)\n")),(0,l.kt)("h3",{id:"invalidsubscription"},"InvalidSubscription"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidSubscription()\n")),(0,l.kt)("h3",{id:"onlycallablefromlink"},"OnlyCallableFromLink"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error OnlyCallableFromLink()\n")),(0,l.kt)("h3",{id:"invalidcalldata"},"InvalidCalldata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidCalldata()\n")),(0,l.kt)("h3",{id:"mustbesubowner"},"MustBeSubOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error MustBeSubOwner(address owner)\n")),(0,l.kt)("h3",{id:"pendingrequestexists"},"PendingRequestExists"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error PendingRequestExists()\n")),(0,l.kt)("h3",{id:"mustberequestedowner"},"MustBeRequestedOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error MustBeRequestedOwner(address proposedOwner)\n")),(0,l.kt)("h3",{id:"balanceinvariantviolated"},"BalanceInvariantViolated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance)\n")),(0,l.kt)("h3",{id:"fundsrecovered"},"FundsRecovered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event FundsRecovered(address to, uint256 amount)\n")),(0,l.kt)("h3",{id:"subscription"},"Subscription"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Subscription {\n  uint96 balance;\n  uint64 reqCount;\n}\n")),(0,l.kt)("h3",{id:"subscriptionconfig"},"SubscriptionConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SubscriptionConfig {\n  address owner;\n  address requestedOwner;\n  address[] consumers;\n}\n")),(0,l.kt)("h3",{id:"s_consumers"},"s_consumers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => mapping(uint64 => uint64)) s_consumers\n")),(0,l.kt)("h3",{id:"s_subscriptionconfigs"},"s_subscriptionConfigs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig) s_subscriptionConfigs\n")),(0,l.kt)("h3",{id:"s_subscriptions"},"s_subscriptions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint64 => struct VRFCoordinatorV2.Subscription) s_subscriptions\n")),(0,l.kt)("h3",{id:"s_currentsubid"},"s_currentSubId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint64 s_currentSubId\n")),(0,l.kt)("h3",{id:"s_totalbalance"},"s_totalBalance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint96 s_totalBalance\n")),(0,l.kt)("h3",{id:"subscriptioncreated"},"SubscriptionCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionCreated(uint64 subId, address owner)\n")),(0,l.kt)("h3",{id:"subscriptionfunded"},"SubscriptionFunded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionFunded(uint64 subId, uint256 oldBalance, uint256 newBalance)\n")),(0,l.kt)("h3",{id:"subscriptionconsumeradded"},"SubscriptionConsumerAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionConsumerAdded(uint64 subId, address consumer)\n")),(0,l.kt)("h3",{id:"subscriptionconsumerremoved"},"SubscriptionConsumerRemoved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionConsumerRemoved(uint64 subId, address consumer)\n")),(0,l.kt)("h3",{id:"subscriptioncanceled"},"SubscriptionCanceled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionCanceled(uint64 subId, address to, uint256 amount)\n")),(0,l.kt)("h3",{id:"subscriptionownertransferrequested"},"SubscriptionOwnerTransferRequested"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionOwnerTransferRequested(uint64 subId, address from, address to)\n")),(0,l.kt)("h3",{id:"subscriptionownertransferred"},"SubscriptionOwnerTransferred"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubscriptionOwnerTransferred(uint64 subId, address from, address to)\n")),(0,l.kt)("h3",{id:"max_request_confirmations"},"MAX_REQUEST_CONFIRMATIONS"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 MAX_REQUEST_CONFIRMATIONS\n")),(0,l.kt)("h3",{id:"max_num_words"},"MAX_NUM_WORDS"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint32 MAX_NUM_WORDS\n")),(0,l.kt)("h3",{id:"gas_for_call_exact_check"},"GAS_FOR_CALL_EXACT_CHECK"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 GAS_FOR_CALL_EXACT_CHECK\n")),(0,l.kt)("h3",{id:"invalidrequestconfirmations"},"InvalidRequestConfirmations"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max)\n")),(0,l.kt)("h3",{id:"gaslimittoobig"},"GasLimitTooBig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error GasLimitTooBig(uint32 have, uint32 want)\n")),(0,l.kt)("h3",{id:"numwordstoobig"},"NumWordsTooBig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error NumWordsTooBig(uint32 have, uint32 want)\n")),(0,l.kt)("h3",{id:"provingkeyalreadyregistered"},"ProvingKeyAlreadyRegistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error ProvingKeyAlreadyRegistered(bytes32 keyHash)\n")),(0,l.kt)("h3",{id:"nosuchprovingkey"},"NoSuchProvingKey"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error NoSuchProvingKey(bytes32 keyHash)\n")),(0,l.kt)("h3",{id:"invalidlinkweiprice"},"InvalidLinkWeiPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidLinkWeiPrice(int256 linkWei)\n")),(0,l.kt)("h3",{id:"insufficientgasforconsumer"},"InsufficientGasForConsumer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error InsufficientGasForConsumer(uint256 have, uint256 want)\n")),(0,l.kt)("h3",{id:"nocorrespondingrequest"},"NoCorrespondingRequest"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error NoCorrespondingRequest()\n")),(0,l.kt)("h3",{id:"incorrectcommitment"},"IncorrectCommitment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error IncorrectCommitment()\n")),(0,l.kt)("h3",{id:"blockhashnotinstore"},"BlockhashNotInStore"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error BlockhashNotInStore(uint256 blockNum)\n")),(0,l.kt)("h3",{id:"paymenttoolarge"},"PaymentTooLarge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error PaymentTooLarge()\n")),(0,l.kt)("h3",{id:"reentrant"},"Reentrant"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"error Reentrant()\n")),(0,l.kt)("h3",{id:"requestcommitment"},"RequestCommitment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct RequestCommitment {\n  uint64 blockNum;\n  uint64 subId;\n  uint32 callbackGasLimit;\n  uint32 numWords;\n  address sender;\n}\n")),(0,l.kt)("h3",{id:"s_provingkeys"},"s_provingKeys"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => address) s_provingKeys\n")),(0,l.kt)("h3",{id:"s_provingkeyhashes"},"s_provingKeyHashes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32[] s_provingKeyHashes\n")),(0,l.kt)("h3",{id:"s_withdrawabletokens"},"s_withdrawableTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint96) s_withdrawableTokens\n")),(0,l.kt)("h3",{id:"s_requestcommitments"},"s_requestCommitments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => bytes32) s_requestCommitments\n")),(0,l.kt)("h3",{id:"provingkeyregistered"},"ProvingKeyRegistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProvingKeyRegistered(bytes32 keyHash, address oracle)\n")),(0,l.kt)("h3",{id:"provingkeyderegistered"},"ProvingKeyDeregistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProvingKeyDeregistered(bytes32 keyHash, address oracle)\n")),(0,l.kt)("h3",{id:"randomwordsrequested"},"RandomWordsRequested"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RandomWordsRequested(bytes32 keyHash, uint256 requestId, uint256 preSeed, uint64 subId, uint16 minimumRequestConfirmations, uint32 callbackGasLimit, uint32 numWords, address sender)\n")),(0,l.kt)("h3",{id:"randomwordsfulfilled"},"RandomWordsFulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RandomWordsFulfilled(uint256 requestId, uint256 outputSeed, uint96 payment, bool success)\n")),(0,l.kt)("h3",{id:"config"},"Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Config {\n  uint16 minimumRequestConfirmations;\n  uint32 maxGasLimit;\n  bool reentrancyLock;\n  uint32 stalenessSeconds;\n  uint32 gasAfterPaymentCalculation;\n}\n")),(0,l.kt)("h3",{id:"s_fallbackweiperunitlink"},"s_fallbackWeiPerUnitLink"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"int256 s_fallbackWeiPerUnitLink\n")),(0,l.kt)("h3",{id:"s_config"},"s_config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct VRFCoordinatorV2.Config s_config\n")),(0,l.kt)("h3",{id:"s_feeconfig"},"s_feeConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct VRFCoordinatorV2.FeeConfig s_feeConfig\n")),(0,l.kt)("h3",{id:"feeconfig"},"FeeConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct FeeConfig {\n  uint32 fulfillmentFlatFeeLinkPPMTier1;\n  uint32 fulfillmentFlatFeeLinkPPMTier2;\n  uint32 fulfillmentFlatFeeLinkPPMTier3;\n  uint32 fulfillmentFlatFeeLinkPPMTier4;\n  uint32 fulfillmentFlatFeeLinkPPMTier5;\n  uint24 reqsForTier2;\n  uint24 reqsForTier3;\n  uint24 reqsForTier4;\n  uint24 reqsForTier5;\n}\n")),(0,l.kt)("h3",{id:"configset"},"ConfigSet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConfigSet(uint16 minimumRequestConfirmations, uint32 maxGasLimit, uint32 stalenessSeconds, uint32 gasAfterPaymentCalculation, int256 fallbackWeiPerUnitLink, struct VRFCoordinatorV2.FeeConfig feeConfig)\n")),(0,l.kt)("h3",{id:"request"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Request {\n  uint64 subId;\n  uint32 callbackGasLimit;\n  uint32 numWords;\n}\n")),(0,l.kt)("h3",{id:"s_requests"},"s_requests"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct VRFCoordinatorV2.Request) s_requests\n")),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(address link, address blockhashStore, address linkEthFeed) public\n")),(0,l.kt)("h3",{id:"registerprovingkey"},"registerProvingKey"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerProvingKey(address oracle, uint256[2] publicProvingKey) external\n")),(0,l.kt)("p",null,"Registers a proving key to an oracle."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oracle"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address of the oracle")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"publicProvingKey"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"key that oracle can use to submit vrf fulfillments")))),(0,l.kt)("h3",{id:"deregisterprovingkey"},"deregisterProvingKey"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deregisterProvingKey(uint256[2] publicProvingKey) external\n")),(0,l.kt)("p",null,"Deregisters a proving key to an oracle."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"publicProvingKey"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"key that oracle can use to submit vrf fulfillments")))),(0,l.kt)("h3",{id:"hashofkey"},"hashOfKey"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashOfKey(uint256[2] publicKey) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"Returns the proving key hash key associated with this public key"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"the key to return the hash of")))),(0,l.kt)("h3",{id:"setconfig"},"setConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setConfig(uint16 minimumRequestConfirmations, uint32 maxGasLimit, uint32 stalenessSeconds, uint32 gasAfterPaymentCalculation, int256 fallbackWeiPerUnitLink, struct VRFCoordinatorV2.FeeConfig feeConfig) external\n")),(0,l.kt)("p",null,"Sets the configuration of the vrfv2 coordinator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"minimumRequestConfirmations"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"global min for request confirmations")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"maxGasLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"uint32"),(0,l.kt)("td",{parentName:"tr",align:null},"global max for request gas limit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stalenessSeconds"),(0,l.kt)("td",{parentName:"tr",align:null},"uint32"),(0,l.kt)("td",{parentName:"tr",align:null},"if the eth/link feed is more stale then this, use the fallback price")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gasAfterPaymentCalculation"),(0,l.kt)("td",{parentName:"tr",align:null},"uint32"),(0,l.kt)("td",{parentName:"tr",align:null},"gas used in doing accounting after completing the gas measurement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fallbackWeiPerUnitLink"),(0,l.kt)("td",{parentName:"tr",align:null},"int256"),(0,l.kt)("td",{parentName:"tr",align:null},"fallback eth/link price in the case of a stale feed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"feeConfig"),(0,l.kt)("td",{parentName:"tr",align:null},"struct VRFCoordinatorV2.FeeConfig"),(0,l.kt)("td",{parentName:"tr",align:null},"fee tier configuration")))),(0,l.kt)("h3",{id:"getconfig"},"getConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConfig() external view returns (uint16 minimumRequestConfirmations, uint32 maxGasLimit, uint32 stalenessSeconds, uint32 gasAfterPaymentCalculation)\n")),(0,l.kt)("h3",{id:"getfeeconfig"},"getFeeConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeConfig() external view returns (uint32 fulfillmentFlatFeeLinkPPMTier1, uint32 fulfillmentFlatFeeLinkPPMTier2, uint32 fulfillmentFlatFeeLinkPPMTier3, uint32 fulfillmentFlatFeeLinkPPMTier4, uint32 fulfillmentFlatFeeLinkPPMTier5, uint24 reqsForTier2, uint24 reqsForTier3, uint24 reqsForTier4, uint24 reqsForTier5)\n")),(0,l.kt)("h3",{id:"gettotalbalance"},"getTotalBalance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalBalance() external view returns (uint256)\n")),(0,l.kt)("h3",{id:"getfallbackweiperunitlink"},"getFallbackWeiPerUnitLink"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFallbackWeiPerUnitLink() external view returns (int256)\n")),(0,l.kt)("h3",{id:"ownercancelsubscription"},"ownerCancelSubscription"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownerCancelSubscription(uint64 subId) external\n")),(0,l.kt)("p",null,"Owner cancel subscription, sends remaining link directly to the subscription owner."),(0,l.kt)("p",null,"notably can be called even if there are pending requests, outstanding ones may fail onchain"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"subscription id")))),(0,l.kt)("h3",{id:"recoverfunds"},"recoverFunds"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function recoverFunds(address to) external\n")),(0,l.kt)("p",null,"Recover link sent with transfer instead of transferAndCall."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address to send link to")))),(0,l.kt)("h3",{id:"getrequestconfig"},"getRequestConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRequestConfig() external view returns (uint16, uint32, bytes32[])\n")),(0,l.kt)("p",null,"Get configuration relevant for making requests"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"minimumRequestConfirmations global min for request confirmations")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[1]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint32"),(0,l.kt)("td",{parentName:"tr",align:null},"maxGasLimit global max for request gas limit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"s_provingKeyHashes list of registered key hashes")))),(0,l.kt)("h3",{id:"requestrandomwords"},"requestRandomWords"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestRandomWords(bytes32 keyHash, uint64 subId, uint16 requestConfirmations, uint32 callbackGasLimit, uint32 numWords) external returns (uint256)\n")),(0,l.kt)("p",null,"Request a set of random words."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"keyHash"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"requestConfirmations"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callbackGasLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"uint32"),(0,l.kt)("td",{parentName:"tr",align:null},"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is ","[0, maxGasLimit]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"numWords"),(0,l.kt)("td",{parentName:"tr",align:null},"uint32"),(0,l.kt)("td",{parentName:"tr",align:null},"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"getcommitment"},"getCommitment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCommitment(uint256 requestId) external view returns (bytes32)\n")),(0,l.kt)("p",null,"Get request commitment"),(0,l.kt)("p",null,"used to determine if a request is fulfilled or not"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"requestId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"id of request")))),(0,l.kt)("h3",{id:"computerequestid"},"computeRequestId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function computeRequestId(bytes32 keyHash, address sender, uint64 subId, uint64 nonce) private pure returns (uint256, uint256)\n")),(0,l.kt)("h3",{id:"callwithexactgas"},"callWithExactGas"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function callWithExactGas(uint256 gasAmount, address target, bytes data) private returns (bool success)\n")),(0,l.kt)("p",null,"calls target address with exactly gasAmount gas and data as calldata\nor reverts if at least gasAmount gas is not available."),(0,l.kt)("h3",{id:"getfeetier"},"getFeeTier"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeTier(uint64 reqCount) public view returns (uint32)\n")),(0,l.kt)("h3",{id:"fulfillrandomwords"},"fulfillRandomWords"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillRandomWords(uint256 _requestId, address _consumer) external returns (uint96)\n")),(0,l.kt)("h3",{id:"calculatepaymentamount"},"calculatePaymentAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function calculatePaymentAmount(uint256 startGas, uint256 gasAfterPaymentCalculation, uint32 fulfillmentFlatFeeLinkPPM, uint256 weiPerUnitGas) internal view returns (uint96)\n")),(0,l.kt)("h3",{id:"getfeeddata"},"getFeedData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeedData() private view returns (int256)\n")),(0,l.kt)("h3",{id:"oraclewithdraw"},"oracleWithdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function oracleWithdraw(address recipient, uint96 amount) external\n")),(0,l.kt)("h3",{id:"ontokentransfer"},"onTokenTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onTokenTransfer(address, uint256 amount, bytes data) external\n")),(0,l.kt)("h3",{id:"getcurrentsubid"},"getCurrentSubId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCurrentSubId() external view returns (uint64)\n")),(0,l.kt)("h3",{id:"getsubscription"},"getSubscription"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSubscription(uint64 subId) external view returns (uint96 balance, uint64 reqCount, address owner, address[] consumers)\n")),(0,l.kt)("p",null,"Get a VRF subscription."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- ID of the subscription")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"balance"),(0,l.kt)("td",{parentName:"tr",align:null},"uint96"),(0,l.kt)("td",{parentName:"tr",align:null},"- LINK balance of the subscription in juels.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reqCount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- number of requests for this subscription, determines fee tier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"- owner of the subscription.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consumers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"- list of consumer address which are able to use this subscription.")))),(0,l.kt)("h3",{id:"createsubscription"},"createSubscription"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createSubscription() external returns (uint64)\n")),(0,l.kt)("p",null,"Create a VRF subscription."),(0,l.kt)("p",null,"You can manage the consumer set dynamically with addConsumer/removeConsumer.\nNote to fund the subscription, use transferAndCall. For example\nLINKTOKEN.transferAndCall(\naddress(COORDINATOR),\namount,\nabi.encode(subId));"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"requestsubscriptionownertransfer"},"requestSubscriptionOwnerTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external\n")),(0,l.kt)("p",null,"Request subscription owner transfer."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- ID of the subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"- proposed new owner of the subscription")))),(0,l.kt)("h3",{id:"acceptsubscriptionownertransfer"},"acceptSubscriptionOwnerTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function acceptSubscriptionOwnerTransfer(uint64 subId) external\n")),(0,l.kt)("p",null,"Request subscription owner transfer."),(0,l.kt)("p",null,"will revert if original owner of subId has\nnot requested that msg.sender become the new owner."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- ID of the subscription")))),(0,l.kt)("h3",{id:"removeconsumer"},"removeConsumer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeConsumer(uint64 subId, address consumer) external\n")),(0,l.kt)("p",null,"Remove a consumer from a VRF subscription."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- ID of the subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"- Consumer to remove from the subscription")))),(0,l.kt)("h3",{id:"addconsumer"},"addConsumer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addConsumer(uint64 subId, address consumer) external\n")),(0,l.kt)("p",null,"Add a consumer to a VRF subscription."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- ID of the subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"- New consumer which can use the subscription")))),(0,l.kt)("h3",{id:"cancelsubscription"},"cancelSubscription"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function cancelSubscription(uint64 subId, address to) external\n")),(0,l.kt)("p",null,"Cancel a subscription"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint64"),(0,l.kt)("td",{parentName:"tr",align:null},"- ID of the subscription")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"- Where to send the remaining LINK to")))),(0,l.kt)("h3",{id:"cancelsubscriptionhelper"},"cancelSubscriptionHelper"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function cancelSubscriptionHelper(uint64 subId, address to) private\n")),(0,l.kt)("h3",{id:"onlysubowner"},"onlySubOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlySubOwner(uint64 subId)\n")),(0,l.kt)("h3",{id:"nonreentrant"},"nonReentrant"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier nonReentrant()\n")),(0,l.kt)("h3",{id:"typeandversion"},"typeAndVersion"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function typeAndVersion() external pure virtual returns (string)\n")),(0,l.kt)("p",null,"The type and version of this contract"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Type and version string")))))}m.isMDXComponent=!0}}]);