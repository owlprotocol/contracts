"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[663],{7522:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>m});var n=r(9901);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},l=Object.keys(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),u=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},c=function(t){var e=u(t.components);return n.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),s=u(r),m=a,k=s["".concat(p,".").concat(m)]||s[m]||d[m]||l;return r?n.createElement(k,i(i({ref:e},c),{},{components:r})):n.createElement(k,i({ref:e},c))}));function m(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=r.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:a,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},3245:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var n=r(4514),a=r(9994),l=(r(9901),r(7522)),i=["components"],o={},p=void 0,u={unversionedId:"contract-docs/ICrafter",id:"contract-docs/ICrafter",title:"ICrafter",description:"ICrafter",source:"@site/docs/contract-docs/ICrafter.md",sourceDirName:"contract-docs",slug:"/contract-docs/ICrafter",permalink:"/contracts/docs/contract-docs/ICrafter",editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/ICrafter.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IBeacon",permalink:"/contracts/docs/contract-docs/IBeacon"},next:{title:"ProxyUpgradeable",permalink:"/contracts/docs/contract-docs/ProxyUpgradeable"}},c={},d=[{value:"ICrafter",id:"icrafter",level:2},{value:"initialize",id:"initialize",level:3},{value:"deposit",id:"deposit",level:3},{value:"withdraw",id:"withdraw",level:3},{value:"craft",id:"craft",level:3}],s={toc:d};function m(t){var e=t.components,r=(0,a.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"icrafter"},"ICrafter"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Pluggable Crafting Contract.\nEach contract is it","'","s own recipe definition.\nPlayers can interact with the contract to have\nrecipie outputs either minted or transferred\nfrom a deposit.")),(0,l.kt)("h3",{id:"initialize"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _admin, address _burnAddress, uint96 _craftableAmount, struct CraftLib.Ingredient[] _inputs, struct CraftLib.Ingredient[] _outputs) external\n")),(0,l.kt)("p",null,"Create recipe"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Configures crafting recipe with inputs/outputs")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_admin"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Admin address to intialize ownership")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_burnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Burn address for burn inputs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_craftableAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint96"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputs"),(0,l.kt)("td",{parentName:"tr",align:null},"struct CraftLib.Ingredient[]"),(0,l.kt)("td",{parentName:"tr",align:null},"inputs for recipe")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_outputs"),(0,l.kt)("td",{parentName:"tr",align:null},"struct CraftLib.Ingredient[]"),(0,l.kt)("td",{parentName:"tr",align:null},"outputs for recipe")))),(0,l.kt)("h3",{id:"deposit"},"deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deposit(uint96 depositAmount, uint256[][] _outputsERC721Ids) external\n")),(0,l.kt)("p",null,"Must be recipe creator"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Used to deposit recipe outputs")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"depositAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint96"),(0,l.kt)("td",{parentName:"tr",align:null},"How many times the recipe should be craftable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_outputsERC721Ids"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[][]"),(0,l.kt)("td",{parentName:"tr",align:null},"2D-array of ERC721 tokens used in crafting")))),(0,l.kt)("h3",{id:"withdraw"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(uint96 withdrawAmount) external\n")),(0,l.kt)("p",null,"Must be recipe creator"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Used to withdraw recipe outputs. Reverse logic as deposit().")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"withdrawAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint96"),(0,l.kt)("td",{parentName:"tr",align:null},"How many times the craft outputs should be withdrawn")))),(0,l.kt)("h3",{id:"craft"},"craft"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function craft(uint96 craftAmount, uint256[][] _inputERC721Ids) external\n")),(0,l.kt)("p",null,"Craft {craftAmount}"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Used to craft. Consumes inputs and transfers outputs.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"craftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint96"),(0,l.kt)("td",{parentName:"tr",align:null},"How many times to craft")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputERC721Ids"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[][]"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of pre-approved NFTs for crafting usage.")))))}m.isMDXComponent=!0}}]);