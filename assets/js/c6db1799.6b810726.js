"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[1865],{7522:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(9901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=d(n),m=r,k=s["".concat(p,".").concat(m)]||s[m]||c[m]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var a=n(2875),r=n(358),l=(n(9901),n(7522)),o=["components"],i={},p=void 0,d={unversionedId:"contract-docs/Lootbox",id:"contract-docs/Lootbox",title:"Lootbox",description:"Lootbox",source:"@site/docs/contract-docs/Lootbox.md",sourceDirName:"contract-docs",slug:"/contract-docs/Lootbox",permalink:"/contracts/docs/contract-docs/Lootbox",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/Lootbox.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IRandomBeacon",permalink:"/contracts/docs/contract-docs/IRandomBeacon"},next:{title:"MinterAutoId",permalink:"/contracts/docs/contract-docs/MinterAutoId"}},u={},c=[{value:"Lootbox",id:"lootbox",level:2},{value:"version",id:"version",level:3},{value:"ERC165TAG",id:"erc165tag",level:3},{value:"crafterContracts",id:"craftercontracts",level:3},{value:"probabilities",id:"probabilities",level:3},{value:"vrfBeacon",id:"vrfbeacon",level:3},{value:"lootboxIdToEpochBlock",id:"lootboxidtoepochblock",level:3},{value:"queueIndex",id:"queueindex",level:3},{value:"upkeepQueue",id:"upkeepqueue",level:3},{value:"constructor",id:"constructor",level:3},{value:"initialize",id:"initialize",level:3},{value:"proxyInitialize",id:"proxyinitialize",level:3},{value:"__Lootbox_init",id:"__lootbox_init",level:3},{value:"__Lootbox_init_unchained",id:"__lootbox_init_unchained",level:3},{value:"requestUnlock",id:"requestunlock",level:3},{value:"checkUpkeep",id:"checkupkeep",level:3},{value:"performUpkeep",id:"performupkeep",level:3},{value:"_unlock",id:"_unlock",level:3},{value:"getEpochBlock",id:"getepochblock",level:3},{value:"getRandomContract",id:"getrandomcontract",level:3},{value:"supportsInterface",id:"supportsinterface",level:3}],s={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"lootbox"},"Lootbox"),(0,l.kt)("p",null,"Contract module that enables implementation of unlockable lootboxes by\nrouting unlock requests to a number of deployed Crafter contracts. By\nconfiguring multiple Crafter contracts that take in the lootbox (typically\nsome ERC721 token) as their sole input and each have different output asset\nbundles, a developer can route the output of a certain lootbox to a myriad of\npossible output bundles, effectively designating the inputted token as a\nlootbox."),(0,l.kt)("p",null,"Configuration for Crafter contracts is designated by two {Ingredient}[]. One\narray is the ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs")," and the other is the ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs"),". The contract allows for\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs")," to be redeemed for the ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"craftableAmount")," times."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"struct Ingredient {\n    TokenType token;\n    ConsumableType consumableType;\n    address contractAddr;\n    uint256[] amounts;\n    uint256[] tokenIds;\n}\n")),(0,l.kt)("p",null,"Configuration is set in the initializers and cannot be edited once the\ncontract has been launched Other configurations will require their own\ncontract to be deployed"),(0,l.kt)("p",null,"However, ",(0,l.kt)("inlineCode",{parentName:"p"},"craftableAmount")," can be dynamically updated through the {deposit}\nand {withdraw} functions which are only accessible to ",(0,l.kt)("inlineCode",{parentName:"p"},"DEFAULT_ADMIN_ROLE")),(0,l.kt)("p",null,"Each Ingredient has a ",(0,l.kt)("inlineCode",{parentName:"p"},"consumableType")," field.* This field is for the ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs"),"\nelements and ignored by the ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," elements. ERC20 and ERC1155 ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs"),"\nelements can be ",(0,l.kt)("inlineCode",{parentName:"p"},"unaffected")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"burned"),". ",(0,l.kt)("inlineCode",{parentName:"p"},"unaffected")," will check for\nownership/balance while ",(0,l.kt)("inlineCode",{parentName:"p"},"burned")," will send the asset(s) to the ",(0,l.kt)("inlineCode",{parentName:"p"},"burnAddress"),".\nERC721 inputs can be ",(0,l.kt)("inlineCode",{parentName:"p"},"NTime")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"burned"),". ",(0,l.kt)("inlineCode",{parentName:"p"},"NTime")," allows for a specfic\n",(0,l.kt)("inlineCode",{parentName:"p"},"tokenId")," to only be used 'n times', as defined by contract deployer."),(0,l.kt)("p",null,"ERC20 ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," elements should have one number in the ",(0,l.kt)("inlineCode",{parentName:"p"},"amounts"),"\narray denoting ERC20 token amount requirement.",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds")," should be empty.\nNTime consumable type ERC721 inputs should have empty ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"amounts[0]")," equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," - the maximum number of times the input can be\nused. Burned ERC721 ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs")," elements should have empty ",(0,l.kt)("inlineCode",{parentName:"p"},"amounts")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds")," array. This contract accepts ",(0,l.kt)("em",{parentName:"p"},"all")," ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenId"),"s from an ERC721\ncontract as inputs. ERC721 ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," elements must have empty ",(0,l.kt)("inlineCode",{parentName:"p"},"amounts"),"\narray. ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds")," array length should be ",(0,l.kt)("inlineCode",{parentName:"p"},"craftableAmount"),". The ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds"),"\narray will contain the ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds")," to be transferred out when {craft} is\ncalled. Important to note that output transfers will be from the ",(0,l.kt)("em",{parentName:"p"},"end")," of the\narray since ",(0,l.kt)("inlineCode",{parentName:"p"},".pop()")," is used."),(0,l.kt)("p",null,"ERC1155 ",(0,l.kt)("inlineCode",{parentName:"p"},"inputs")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," elements should have the length of ",(0,l.kt)("inlineCode",{parentName:"p"},"amounts"),"\nand ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenIds")," array be the same. The indices will be linked where each index\ndenotes how much of each ERC1155 ",(0,l.kt)("inlineCode",{parentName:"p"},"tokenId")," is required."),(0,l.kt)("p",null,"This module is used through composition. It can be deployed to create\ncrafting logic with asset contracts that are already on chain and active;\nplug-and-play, so to speak."),(0,l.kt)("p",null,"Configuration for a lootbox requires the developer enter ",(0,l.kt)("inlineCode",{parentName:"p"},"_crafterContracts"),",\nan address array of deployed Crafter contracts that makes up the pool of\npotential contracts routed to.* The ",(0,l.kt)("inlineCode",{parentName:"p"},"probabilities")," array must be of the same\nlength, as it describes the probability distribution of the random variable\nthat determines a randomly chosen contract."),(0,l.kt)("p",null,"A VRFBeacon is deployed and used to inject randomness, while a Chainlink\nKeeper is used to autonomously check if a random number has been returned by\nthe off-chain VRFBeacon coordinator. Upon receiving a random number, the\nKeeper then calls the _unlock() function to randomly select a Crafter\ncontract and call its ",(0,l.kt)("inlineCode",{parentName:"p"},"craft()")," function."),(0,l.kt)("h3",{id:"version"},"version"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"string version\n")),(0,l.kt)("h3",{id:"erc165tag"},"ERC165TAG"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC165TAG\n")),(0,l.kt)("h3",{id:"craftercontracts"},"crafterContracts"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address[] crafterContracts\n")),(0,l.kt)("h3",{id:"probabilities"},"probabilities"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[] probabilities\n")),(0,l.kt)("h3",{id:"vrfbeacon"},"vrfBeacon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address vrfBeacon\n")),(0,l.kt)("h3",{id:"lootboxidtoepochblock"},"lootboxIdToEpochBlock"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) lootboxIdToEpochBlock\n")),(0,l.kt)("h3",{id:"queueindex"},"queueIndex"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 queueIndex\n")),(0,l.kt)("h3",{id:"upkeepqueue"},"upkeepQueue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[] upkeepQueue\n")),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,l.kt)("h3",{id:"initialize"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _admin, address[] _crafterContracts, uint8[] _probabilities, address _vrfBeacon, address _forwarder) external\n")),(0,l.kt)("p",null,"Create Lootbox instance"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_admin"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the admin/owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_crafterContracts"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of crafterContract address, each with unique recipe")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_probabilities"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of cumulative probabilities associated with using a contract from crafterContracts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vrfBeacon"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_forwarder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address for trusted forwarder for open GSN integration")))),(0,l.kt)("h3",{id:"proxyinitialize"},"proxyInitialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function proxyInitialize(address _admin, address[] _crafterContracts, uint8[] _probabilities, address _vrfBeacon, address _forwarder) external\n")),(0,l.kt)("p",null,"Initializes contract through beacon proxy (replaces constructor in proxy pattern)"),(0,l.kt)("h3",{id:"__lootbox_init"},"__Lootbox_init"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function __Lootbox_init(address _admin, address[] _crafterContracts, uint8[] _probabilities, address _vrfBeacon, address _forwarder) internal\n")),(0,l.kt)("p",null,"performs validations that ",(0,l.kt)("inlineCode",{parentName:"p"},"_inputs"),"  are valid and creates the\nconfiguration"),(0,l.kt)("h3",{id:"__lootbox_init_unchained"},"__Lootbox_init_unchained"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function __Lootbox_init_unchained(address[] _crafterContracts, uint8[] _probabilities, address _vrfBeacon) internal\n")),(0,l.kt)("p",null,"performs validations that ",(0,l.kt)("inlineCode",{parentName:"p"},"_inputs")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"_outputs")," are valid and\ncreates the configuration"),(0,l.kt)("h3",{id:"requestunlock"},"requestUnlock"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestUnlock(uint256 lootboxId) external returns (uint256 requestId, uint256 epochBlockNumber)\n")),(0,l.kt)("p",null,"Makes a request for random number from VRFBeacon, adds unlock\nrequest to queue - specific to lootbox token id"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lootboxId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the token ID of the lootbox asset to be unlocked")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"requestId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id given to the request by the VRFBeacon")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"epochBlockNumber"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the epoch block number at the time request is made")))),(0,l.kt)("h3",{id:"checkupkeep"},"checkUpkeep"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkUpkeep(bytes) external view returns (bool upkeepNeeded, bytes performData)\n")),(0,l.kt)("p",null,"Run by Chainlink Keeper to check whether random number has been returned by VRFBeacon"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"upkeepNeeded"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"whether a random number has been returned")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"performData"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"encoding of random number and queue index")))),(0,l.kt)("h3",{id:"performupkeep"},"performUpkeep"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function performUpkeep(bytes performData) external\n")),(0,l.kt)("p",null,"Run by Chainlink Keeper to perform unlock on a lootbox id requiring upkeep"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"performData"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"encoding of random number and queue index via checkUpkeep")))),(0,l.kt)("h3",{id:"_unlock"},"_unlock"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _unlock(uint256 lootboxId, uint256 randomSeed) internal\n")),(0,l.kt)("p",null,"Internal function called by performUpkeep() to call randomly-selected Crafter contract"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lootboxId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the lootbox to unlock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"randomSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the random seed generated by the VRFBeacon to be used to source a random number")))),(0,l.kt)("h3",{id:"getepochblock"},"getEpochBlock"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEpochBlock(uint256 lootboxId) public view returns (uint256)\n")),(0,l.kt)("p",null,"Used for testing only"),(0,l.kt)("p",null,"Returns epoch block during which requestUnlock was called on a lootbox ID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lootboxId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the ID of the lootbox to unlock")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256 the epoch block corresponding to lootboxId")))),(0,l.kt)("h3",{id:"getrandomcontract"},"getRandomContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRandomContract(uint256 lootboxId, uint256 randomSeed) external view returns (uint256 selectedContract)\n")),(0,l.kt)("p",null,"Used for testing only"),(0,l.kt)("p",null,"Returns the randomly selected contract from the contracts array"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lootboxId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the ID of the lootbox to unlock, used as nonce in random number generation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"randomSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the random seed taken from checkUpkeep")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"selectedContract"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the randomly selected contract's index in contracts array")))),(0,l.kt)("h3",{id:"supportsinterface"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("p",null,"ERC165 Support"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,l.kt)("td",{parentName:"tr",align:null},"hash of the interface testing for")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"bool whether interface is supported")))))}m.isMDXComponent=!0}}]);