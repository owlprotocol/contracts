"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[7266],{7522:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(9901);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),u=o,f=d["".concat(i,".").concat(u)]||d[u]||m[u]||a;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4386:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var n=r(2875),o=r(358),a=(r(9901),r(7522)),c=["components"],l={},i=void 0,s={unversionedId:"contract-docs/ERC1820ImplementerAuthorizeAll",id:"contract-docs/ERC1820ImplementerAuthorizeAll",title:"ERC1820ImplementerAuthorizeAll",description:"ERC1820ImplementerAuthorizeAll",source:"@site/docs/contract-docs/ERC1820ImplementerAuthorizeAll.md",sourceDirName:"contract-docs",slug:"/contract-docs/ERC1820ImplementerAuthorizeAll",permalink:"/contracts/docs/contract-docs/ERC1820ImplementerAuthorizeAll",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/ERC1820ImplementerAuthorizeAll.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ERC1167Factory",permalink:"/contracts/docs/contract-docs/ERC1167Factory"},next:{title:"ERC1820ImplementerInterface",permalink:"/contracts/docs/contract-docs/ERC1820ImplementerInterface"}},p={},m=[{value:"ERC1820ImplementerAuthorizeAll",id:"erc1820implementerauthorizeall",level:2},{value:"_ERC1820_ACCEPT_MAGIC",id:"_erc1820_accept_magic",level:3},{value:"_supportedInterfaces",id:"_supportedinterfaces",level:3},{value:"canImplementInterfaceForAddress",id:"canimplementinterfaceforaddress",level:3},{value:"_registerInterfaceForAddress",id:"_registerinterfaceforaddress",level:3}],d={toc:m};function u(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"erc1820implementerauthorizeall"},"ERC1820ImplementerAuthorizeAll"),(0,a.kt)("p",null,"Implementation of the {IERC1820Implementer} interface."),(0,a.kt)("p",null,"Contracts may inherit from this and call {_registerInterfaceForAddress} to\ndeclare their willingness to be implementers."),(0,a.kt)("p",null,"Any accounts requesting to add this to the registry will be approved."),(0,a.kt)("p",null,"{IERC1820Registry-setInterfaceImplementer} should then be called for the\nregistration to be complete."),(0,a.kt)("h3",{id:"_erc1820_accept_magic"},"_ERC1820_ACCEPT_MAGIC"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 _ERC1820_ACCEPT_MAGIC\n")),(0,a.kt)("h3",{id:"_supportedinterfaces"},"_supportedInterfaces"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => bool) _supportedInterfaces\n")),(0,a.kt)("h3",{id:"canimplementinterfaceforaddress"},"canImplementInterfaceForAddress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function canImplementInterfaceForAddress(bytes32 interfaceHash, address) public view virtual returns (bytes32)\n")),(0,a.kt)("p",null,"See {IERC1820Implementer-canImplementInterfaceForAddress}."),(0,a.kt)("h3",{id:"_registerinterfaceforaddress"},"_registerInterfaceForAddress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _registerInterfaceForAddress(bytes32 interfaceHash) internal virtual\n")),(0,a.kt)("p",null,"Declares the contract as willing to be an implementer of\n",(0,a.kt)("inlineCode",{parentName:"p"},"interfaceHash")," for ",(0,a.kt)("inlineCode",{parentName:"p"},"account"),"."),(0,a.kt)("p",null,"See {IERC1820Registry-setInterfaceImplementer} and\n{IERC1820Registry-interfaceHash}."))}u.isMDXComponent=!0}}]);