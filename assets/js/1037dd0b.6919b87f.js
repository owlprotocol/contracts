"use strict";(self.webpackChunkowlprotocol_contracts_docs=self.webpackChunkowlprotocol_contracts_docs||[]).push([[5649],{7522:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(9901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var a=n(2875),r=n(358),l=(n(9901),n(7522)),o=["components"],i={},s=void 0,u={unversionedId:"contract-docs/VRFBeacon",id:"contract-docs/VRFBeacon",title:"VRFBeacon",description:"VRFBeacon",source:"@site/docs/contract-docs/VRFBeacon.md",sourceDirName:"contract-docs",slug:"/contract-docs/VRFBeacon",permalink:"/contracts/docs/contract-docs/VRFBeacon",draft:!1,editUrl:"https://github.com/owlprotocol/contracts/docs/contract-docs/VRFBeacon.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UpgradeableBeaconInitializable",permalink:"/contracts/docs/contract-docs/UpgradeableBeaconInitializable"},next:{title:"VRFCoordinatorV2",permalink:"/contracts/docs/contract-docs/VRFCoordinatorV2"}},c={},d=[{value:"VRFBeacon",id:"vrfbeacon",level:2},{value:"Fulfilled",id:"fulfilled",level:3},{value:"Requested",id:"requested",level:3},{value:"COORDINATOR",id:"coordinator",level:3},{value:"keyHash",id:"keyhash",level:3},{value:"s_subscriptionId",id:"s_subscriptionid",level:3},{value:"callbackGasLimit",id:"callbackgaslimit",level:3},{value:"numWords",id:"numwords",level:3},{value:"blockNumberToRequestId",id:"blocknumbertorequestid",level:3},{value:"requestIdToRandomness",id:"requestidtorandomness",level:3},{value:"constructor",id:"constructor",level:3},{value:"getRequestId",id:"getrequestid",level:3},{value:"getRandomness",id:"getrandomness",level:3},{value:"requestRandomness",id:"requestrandomness",level:3},{value:"fulfillRandomWords",id:"fulfillrandomwords",level:3}],p={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"vrfbeacon"},"VRFBeacon"),(0,l.kt)("p",null,"A contract that acts as a central beacon for fetching random numbers\nfrom Chainlink VRF. Multiple requests within an ",(0,l.kt)("inlineCode",{parentName:"p"},"EPOCH_PERIOD")," (as defined by\nVRFBeacon deployer) will be coupled into one request to ",(0,l.kt)("inlineCode",{parentName:"p"},"VRFCoordiantorV2"),".\nAn ",(0,l.kt)("inlineCode",{parentName:"p"},"EPOCH_PERIOD")," is simply a block range."),(0,l.kt)("p",null,"Consumers of ",(0,l.kt)("inlineCode",{parentName:"p"},"VRFBeacon")," will use the one random number as a seed to generate\nanother random number for the contract's own use case."),(0,l.kt)("h3",{id:"fulfilled"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(uint256 requestId, uint256 randomNumber)\n")),(0,l.kt)("h3",{id:"requested"},"Requested"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Requested(uint256 requestId)\n")),(0,l.kt)("h3",{id:"coordinator"},"COORDINATOR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract VRFCoordinatorV2Interface COORDINATOR\n")),(0,l.kt)("h3",{id:"keyhash"},"keyHash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 keyHash\n")),(0,l.kt)("h3",{id:"s_subscriptionid"},"s_subscriptionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint64 s_subscriptionId\n")),(0,l.kt)("h3",{id:"callbackgaslimit"},"callbackGasLimit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint32 callbackGasLimit\n")),(0,l.kt)("h3",{id:"numwords"},"numWords"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint32 numWords\n")),(0,l.kt)("h3",{id:"blocknumbertorequestid"},"blockNumberToRequestId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) blockNumberToRequestId\n")),(0,l.kt)("h3",{id:"requestidtorandomness"},"requestIdToRandomness"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) requestIdToRandomness\n")),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(uint64 _subscriptionId, address _vrf, bytes32 _keyHash, uint32 _callbackGasLimit, uint8 _epochPeriod) public\n")),(0,l.kt)("p",null,"Constructor inherits VRFConsumerBase"),(0,l.kt)("h3",{id:"getrequestid"},"getRequestId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRequestId(uint256 blockNumber) external view returns (uint256 requestId)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumber"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"in which request was made")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"requestId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"of the EPOCH_PERIOD that ",(0,l.kt)("inlineCode",{parentName:"td"},"blockNumber")," is in")))),(0,l.kt)("h3",{id:"getrandomness"},"getRandomness"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRandomness(uint256 blockNumber) external view returns (uint256 randomness)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumber"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"in which request was made")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"randomness"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"if not fulfilled yet returns 0")))),(0,l.kt)("h3",{id:"requestrandomness"},"requestRandomness"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestRandomness() public returns (uint256, uint256)\n")),(0,l.kt)("p",null,"Requests randomness from a block hash"),(0,l.kt)("h3",{id:"fulfillrandomwords"},"fulfillRandomWords"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillRandomWords(uint256 requestId, uint256[] randomWords) internal\n")),(0,l.kt)("p",null,"Callback function used by VRF Coordinator"))}m.isMDXComponent=!0}}]);