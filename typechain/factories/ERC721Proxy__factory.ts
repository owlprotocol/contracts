/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721Proxy, ERC721ProxyInterface } from "../ERC721Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_codeAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "proxyAddr",
        type: "address",
      },
    ],
    name: "NewClone",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "createProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610772380380610772833981810160405281019061003291906100ce565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b6106238061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632a0acc6a1461003b57806333ef584614610059575b600080fd5b610043610075565b60405161005091906103d8565b60405180910390f35b610073600480360381019061006e91906102d6565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061044d565b60405180910390fd5b6000610154600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610204565b90508073ffffffffffffffffffffffffffffffffffffffff16635c6d8da1858585336040518563ffffffff1660e01b815260040161019594939291906103f3565b600060405180830381600087803b1580156101af57600080fd5b505af11580156101c3573d6000803e3d6000fd5b505050507fcc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b7816040516101f691906103d8565b60405180910390a150505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b600061028161027c84610492565b61046d565b90508281526020810184848401111561029957600080fd5b6102a4848285610511565b509392505050565b600082601f8301126102bd57600080fd5b81356102cd84826020860161026e565b91505092915050565b6000806000606084860312156102eb57600080fd5b600084013567ffffffffffffffff81111561030557600080fd5b610311868287016102ac565b935050602084013567ffffffffffffffff81111561032e57600080fd5b61033a868287016102ac565b925050604084013567ffffffffffffffff81111561035757600080fd5b610363868287016102ac565b9150509250925092565b610376816104df565b82525050565b6000610387826104c3565b61039181856104ce565b93506103a1818560208601610520565b6103aa816105b3565b840191505092915050565b60006103c26013836104ce565b91506103cd826105c4565b602082019050919050565b60006020820190506103ed600083018461036d565b92915050565b6000608082019050818103600083015261040d818761037c565b90508181036020830152610421818661037c565b90508181036040830152610435818561037c565b9050610444606083018461036d565b95945050505050565b60006020820190508181036000830152610466816103b5565b9050919050565b6000610477610488565b90506104838282610553565b919050565b6000604051905090565b600067ffffffffffffffff8211156104ad576104ac610584565b5b6104b6826105b3565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561053e578082015181840152602081019050610523565b8381111561054d576000848401525b50505050565b61055c826105b3565b810181811067ffffffffffffffff8211171561057b5761057a610584565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f53656e646572206973206e6f742061646d696e0000000000000000000000000060008201525056fea26469706673582212208df380b9b682997d472e5225b2661b6a4b9b0cd154cd56d20ba8cddbfbb6d42d64736f6c63430008040033";

export class ERC721Proxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _codeAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Proxy> {
    return super.deploy(_codeAddr, overrides || {}) as Promise<ERC721Proxy>;
  }
  getDeployTransaction(
    _codeAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_codeAddr, overrides || {});
  }
  attach(address: string): ERC721Proxy {
    return super.attach(address) as ERC721Proxy;
  }
  connect(signer: Signer): ERC721Proxy__factory {
    return super.connect(signer) as ERC721Proxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ProxyInterface {
    return new utils.Interface(_abi) as ERC721ProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Proxy {
    return new Contract(address, _abi, signerOrProvider) as ERC721Proxy;
  }
}
