/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinterSimple, MinterSimpleInterface } from "../MinterSimple";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "CreateSpecies",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MintSpecies",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "createSpecies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
    ],
    name: "getSpecies",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintGuardAddress",
        type: "address",
      },
    ],
    name: "setMintGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060007fe5768001ceb4673781b1d04ea3de1953b0a39f10c0fea931ef5fd3b1694cb48390506200004d81620000fc60201b620007181760201c565b620000837ff5b83127000000000000000000000000000000000000000000000000000000006200012a60201b620007461760201c565b5060007ffb5619f1d9da90a5957d8c36ccf63373ce5c15f9ebffac4878252986a1cfdc549050620000bf81620000fc60201b620007181760201c565b620000f57f1f3a5ae1000000000000000000000000000000000000000000000000000000006200012a60201b620007461760201c565b5062000285565b600180600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000196576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018d9062000229565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600062000211601c836200024b565b91506200021e826200025c565b602082019050919050565b60006020820190508181036000830152620002448162000202565b9050919050565b600082825260208201905092915050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b6117b280620002956000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063249cb3fa1161005b578063249cb3fa146100ea5780632be6a2a91461011a578063de5e938e1461014e578063ea0b2c0e1461016a5761007d565b806301ffc9a7146100825780630414ab2b146100b25780631b2ef1ca146100ce575b600080fd5b61009c60048036038101906100979190611033565b610186565b6040516100a9919061133f565b60405180910390f35b6100cc60048036038101906100c791906110c1565b6101fd565b005b6100e860048036038101906100e391906110c1565b6102f9565b005b61010460048036038101906100ff9190610ff7565b6103f5565b604051610111919061135a565b60405180910390f35b610134600480360381019061012f919061105c565b61044f565b60405161014595949392919061128c565b60405180910390f35b61016860048036038101906101639190610f6b565b61051a565b005b610184600480360381019061017f9190611085565b6106bf565b005b60006101918261081b565b806101f65750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b816003600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029b90611417565b60405180910390fd5b826102ae81610885565b6102b98433856109cc565b837f8bf50312adaaf209a92a83a9dc5a552047b8f3da5809e85aaff1bb86b979ed8133856040516102eb929190611316565b60405180910390a250505050565b816003600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790611417565b60405180910390fd5b826103aa81610885565b6103b5843385610ad2565b837f8bf50312adaaf209a92a83a9dc5a552047b8f3da5809e85aaff1bb86b979ed8133856040516103e7929190611316565b60405180910390a250505050565b60006001600084815260200190815260200160002060009054906101000a900460ff16610425576000801b610447565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b6000806000806000806003600088815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600301548460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955095509550955095505091939590929450565b6105246002610bd8565b6000600360006105346002610bee565b81526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600301819055503373ffffffffffffffffffffffffffffffffffffffff167fd83a2cae25dbbcad2777652cdf5dd52554093b0c8b7d4d4b20bdef825d28ba8461069b6002610bee565b878787876040516106b0959493929190611480565b60405180910390a25050505050565b806003600084815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600180600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a690611397565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006003600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109c857600115158173ffffffffffffffffffffffffffffffffffffffff16631f22011b84336040518363ffffffff1660e01b8152600401610933929190611457565b602060405180830381600087803b15801561094d57600080fd5b505af1158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190610fce565b1515146109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be906113f7565b60405180910390fd5b5b5050565b6000600360008581526020019081526020016000209050610a3b8160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030154610bfc565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b8152600401610a9a929190611316565b600060405180830381600087803b158015610ab457600080fd5b505af1158015610ac8573d6000803e3d6000fd5b5050505050505050565b6000600360008581526020019081526020016000209050610b418160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030154610bfc565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401610ba0929190611316565b600060405180830381600087803b158015610bba57600080fd5b505af1158015610bce573d6000803e3d6000fd5b5050505050505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b610c7f846323b872dd60e01b858585604051602401610c1d939291906112df565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c85565b50505050565b6000610ce7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d4c9092919063ffffffff16565b9050600081511115610d475780806020019051810190610d079190610fce565b610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3d90611437565b60405180910390fd5b5b505050565b6060610d5b8484600085610d64565b90509392505050565b606082471015610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da0906113b7565b60405180910390fd5b610db285610e78565b610df1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de8906113d7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e1a9190611275565b60006040518083038185875af1925050503d8060008114610e57576040519150601f19603f3d011682016040523d82523d6000602084013e610e5c565b606091505b5091509150610e6c828286610e9b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610eab57829050610efb565b600083511115610ebe5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef29190611375565b60405180910390fd5b9392505050565b600081359050610f1181611709565b92915050565b600081519050610f2681611720565b92915050565b600081359050610f3b81611737565b92915050565b600081359050610f508161174e565b92915050565b600081359050610f6581611765565b92915050565b60008060008060808587031215610f8157600080fd5b6000610f8f87828801610f02565b9450506020610fa087828801610f02565b9350506040610fb187828801610f02565b9250506060610fc287828801610f56565b91505092959194509250565b600060208284031215610fe057600080fd5b6000610fee84828501610f17565b91505092915050565b6000806040838503121561100a57600080fd5b600061101885828601610f2c565b925050602061102985828601610f02565b9150509250929050565b60006020828403121561104557600080fd5b600061105384828501610f41565b91505092915050565b60006020828403121561106e57600080fd5b600061107c84828501610f56565b91505092915050565b6000806040838503121561109857600080fd5b60006110a685828601610f56565b92505060206110b785828601610f02565b9150509250929050565b600080604083850312156110d457600080fd5b60006110e285828601610f56565b92505060206110f385828601610f56565b9150509250929050565b61110681611505565b82525050565b61111581611517565b82525050565b61112481611523565b82525050565b6000611135826114d3565b61113f81856114e9565b935061114f818560208601611583565b80840191505092915050565b6000611166826114de565b61117081856114f4565b9350611180818560208601611583565b611189816115b6565b840191505092915050565b60006111a1601c836114f4565b91506111ac826115c7565b602082019050919050565b60006111c46026836114f4565b91506111cf826115f0565b604082019050919050565b60006111e7601d836114f4565b91506111f28261163f565b602082019050919050565b600061120a600c836114f4565b915061121582611668565b602082019050919050565b600061122d6017836114f4565b915061123882611691565b602082019050919050565b6000611250602a836114f4565b915061125b826116ba565b604082019050919050565b61126f81611579565b82525050565b6000611281828461112a565b915081905092915050565b600060a0820190506112a160008301886110fd565b6112ae60208301876110fd565b6112bb60408301866110fd565b6112c86060830185611266565b6112d560808301846110fd565b9695505050505050565b60006060820190506112f460008301866110fd565b61130160208301856110fd565b61130e6040830184611266565b949350505050565b600060408201905061132b60008301856110fd565b6113386020830184611266565b9392505050565b6000602082019050611354600083018461110c565b92915050565b600060208201905061136f600083018461111b565b92915050565b6000602082019050818103600083015261138f818461115b565b905092915050565b600060208201905081810360008301526113b081611194565b9050919050565b600060208201905081810360008301526113d0816111b7565b9050919050565b600060208201905081810360008301526113f0816111da565b9050919050565b60006020820190508181036000830152611410816111fd565b9050919050565b6000602082019050818103600083015261143081611220565b9050919050565b6000602082019050818103600083015261145081611243565b9050919050565b600060408201905061146c6000830185611266565b61147960208301846110fd565b9392505050565b600060a0820190506114956000830188611266565b6114a260208301876110fd565b6114af60408301866110fd565b6114bc60608301856110fd565b6114c96080830184611266565b9695505050505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061151082611559565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156115a1578082015181840152602081019050611586565b838111156115b0576000848401525b50505050565b6000601f19601f8301169050919050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4d696e742064656e696564210000000000000000000000000000000000000000600082015250565b7f5370656369657320646f6573206e6f7420657869737421000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61171281611505565b811461171d57600080fd5b50565b61172981611517565b811461173457600080fd5b50565b61174081611523565b811461174b57600080fd5b50565b6117578161152d565b811461176257600080fd5b50565b61176e81611579565b811461177957600080fd5b5056fea2646970667358221220a426f3a0c4368cfde3848cb084121921f8b10f4f2d163ab96e00abd58b43e75c64736f6c63430008040033";

export class MinterSimple__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinterSimple> {
    return super.deploy(overrides || {}) as Promise<MinterSimple>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinterSimple {
    return super.attach(address) as MinterSimple;
  }
  connect(signer: Signer): MinterSimple__factory {
    return super.connect(signer) as MinterSimple__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterSimpleInterface {
    return new utils.Interface(_abi) as MinterSimpleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinterSimple {
    return new Contract(address, _abi, signerOrProvider) as MinterSimple;
  }
}
