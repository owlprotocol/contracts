/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MinterSimpleMerkle,
  MinterSimpleMerkleInterface,
} from "../MinterSimpleMerkle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "CreateSpecies",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MintSpecies",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
    ],
    name: "createSpecies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
    ],
    name: "getSpecies",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintFeeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintFeeAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintFeeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hashKeccakUser",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "speciesId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintGuardAddress",
        type: "address",
      },
    ],
    name: "setMintGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060007fe5768001ceb4673781b1d04ea3de1953b0a39f10c0fea931ef5fd3b1694cb48390506200004d81620000fc60201b620007871760201c565b620000837ff5b83127000000000000000000000000000000000000000000000000000000006200012a60201b620007b51760201c565b5060007f31a5b62e71964a1df02721f445e8b5bae728f4aa35fafa483c870206766d7a109050620000bf81620000fc60201b620007871760201c565b620000f57f1e5b96b7000000000000000000000000000000000000000000000000000000006200012a60201b620007b51760201c565b5062000285565b600180600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000196576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018d9062000229565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600062000211601c836200024b565b91506200021e826200025c565b602082019050919050565b60006020820190508181036000830152620002448162000202565b9050919050565b600082825260208201905092915050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b61197080620002956000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633d7fe7b21161005b5780633d7fe7b21461013d57806364524dd914610159578063de5e938e14610177578063ea0b2c0e1461019357610088565b806301ffc9a71461008d57806323247105146100bd578063249cb3fa146100d95780632be6a2a914610109575b600080fd5b6100a760048036038101906100a291906110f5565b6101af565b6040516100b491906114b8565b60405180910390f35b6100d760048036038101906100d29190611183565b610226565b005b6100f360048036038101906100ee91906110b9565b61032e565b60405161010091906114d3565b60405180910390f35b610123600480360381019061011e919061111e565b610388565b604051610134959493929190611405565b60405180910390f35b61015760048036038101906101529190611183565b610453565b005b61016161055b565b60405161016e91906114d3565b60405180910390f35b610191600480360381019061018c919061102d565b610589565b005b6101ad60048036038101906101a89190611147565b61072e565b005b60006101ba8261088a565b8061021f5750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b846003600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490611590565b60405180910390fd5b858484846102dd848484846108f4565b6102e88a338b610a44565b897f8bf50312adaaf209a92a83a9dc5a552047b8f3da5809e85aaff1bb86b979ed81338b60405161031a92919061148f565b60405180910390a250505050505050505050565b60006001600084815260200190815260200160002060009054906101000a900460ff1661035e576000801b610380565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b6000806000806000806003600088815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600301548460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955095509550955095505091939590929450565b846003600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190611590565b60405180910390fd5b8584848461050a848484846108f4565b6105158a338b610b4a565b897f8bf50312adaaf209a92a83a9dc5a552047b8f3da5809e85aaff1bb86b979ed81338b60405161054792919061148f565b60405180910390a250505050505050505050565b60003360405160200161056e91906113ea565b60405160208183030381529060405280519060200120905090565b6105936002610c50565b6000600360006105a36002610c66565b81526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600301819055503373ffffffffffffffffffffffffffffffffffffffff167fd83a2cae25dbbcad2777652cdf5dd52554093b0c8b7d4d4b20bdef825d28ba8461070a6002610c66565b8787878760405161071f9594939291906115d0565b60405180910390a25050505050565b806003600084815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600180600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561081e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081590611510565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006003600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a3d57600115158173ffffffffffffffffffffffffffffffffffffffff1663095f1d4387338888886040518663ffffffff1660e01b81526004016109a8959493929190611623565b602060405180830381600087803b1580156109c257600080fd5b505af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190611090565b151514610a3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3390611570565b60405180910390fd5b5b5050505050565b6000600360008581526020019081526020016000209050610ab38160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030154610c74565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401610b1292919061148f565b600060405180830381600087803b158015610b2c57600080fd5b505af1158015610b40573d6000803e3d6000fd5b5050505050505050565b6000600360008581526020019081526020016000209050610bb98160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030154610c74565b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b8152600401610c1892919061148f565b600060405180830381600087803b158015610c3257600080fd5b505af1158015610c46573d6000803e3d6000fd5b5050505050505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b610cf7846323b872dd60e01b858585604051602401610c9593929190611458565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cfd565b50505050565b6000610d5f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610dc49092919063ffffffff16565b9050600081511115610dbf5780806020019051810190610d7f9190611090565b610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db5906115b0565b60405180910390fd5b5b505050565b6060610dd38484600085610ddc565b90509392505050565b606082471015610e21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1890611530565b60405180910390fd5b610e2a85610ef0565b610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090611550565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e9291906113d3565b60006040518083038185875af1925050503d8060008114610ecf576040519150601f19603f3d011682016040523d82523d6000602084013e610ed4565b606091505b5091509150610ee4828286610f13565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610f2357829050610f73565b600083511115610f365782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a91906114ee565b60405180910390fd5b9392505050565b600081359050610f89816118c7565b92915050565b60008083601f840112610fa157600080fd5b8235905067ffffffffffffffff811115610fba57600080fd5b602083019150836020820283011115610fd257600080fd5b9250929050565b600081519050610fe8816118de565b92915050565b600081359050610ffd816118f5565b92915050565b6000813590506110128161190c565b92915050565b60008135905061102781611923565b92915050565b6000806000806080858703121561104357600080fd5b600061105187828801610f7a565b945050602061106287828801610f7a565b935050604061107387828801610f7a565b925050606061108487828801611018565b91505092959194509250565b6000602082840312156110a257600080fd5b60006110b084828501610fd9565b91505092915050565b600080604083850312156110cc57600080fd5b60006110da85828601610fee565b92505060206110eb85828601610f7a565b9150509250929050565b60006020828403121561110757600080fd5b600061111584828501611003565b91505092915050565b60006020828403121561113057600080fd5b600061113e84828501611018565b91505092915050565b6000806040838503121561115a57600080fd5b600061116885828601611018565b925050602061117985828601610f7a565b9150509250929050565b60008060008060006080868803121561119b57600080fd5b60006111a988828901611018565b95505060206111ba88828901611018565b94505060406111cb88828901610fee565b935050606086013567ffffffffffffffff8111156111e857600080fd5b6111f488828901610f8f565b92509250509295509295909350565b61120c816116b4565b82525050565b600061121e8385611687565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561124d57600080fd5b60208302925061125e838584611732565b82840190509392505050565b611273816116c6565b82525050565b611282816116d2565b82525050565b600061129382611671565b61129d8185611698565b93506112ad818560208601611741565b80840191505092915050565b60006112c48261167c565b6112ce81856116a3565b93506112de818560208601611741565b6112e781611774565b840191505092915050565b60006112ff601c836116a3565b915061130a82611785565b602082019050919050565b60006113226026836116a3565b915061132d826117ae565b604082019050919050565b6000611345601d836116a3565b9150611350826117fd565b602082019050919050565b6000611368600c836116a3565b915061137382611826565b602082019050919050565b600061138b6017836116a3565b91506113968261184f565b602082019050919050565b60006113ae602a836116a3565b91506113b982611878565b604082019050919050565b6113cd81611728565b82525050565b60006113df8284611288565b915081905092915050565b60006020820190506113ff6000830184611203565b92915050565b600060a08201905061141a6000830188611203565b6114276020830187611203565b6114346040830186611203565b61144160608301856113c4565b61144e6080830184611203565b9695505050505050565b600060608201905061146d6000830186611203565b61147a6020830185611203565b61148760408301846113c4565b949350505050565b60006040820190506114a46000830185611203565b6114b160208301846113c4565b9392505050565b60006020820190506114cd600083018461126a565b92915050565b60006020820190506114e86000830184611279565b92915050565b6000602082019050818103600083015261150881846112b9565b905092915050565b60006020820190508181036000830152611529816112f2565b9050919050565b6000602082019050818103600083015261154981611315565b9050919050565b6000602082019050818103600083015261156981611338565b9050919050565b600060208201905081810360008301526115898161135b565b9050919050565b600060208201905081810360008301526115a98161137e565b9050919050565b600060208201905081810360008301526115c9816113a1565b9050919050565b600060a0820190506115e560008301886113c4565b6115f26020830187611203565b6115ff6040830186611203565b61160c6060830185611203565b61161960808301846113c4565b9695505050505050565b600060808201905061163860008301886113c4565b6116456020830187611203565b6116526040830186611279565b8181036060830152611665818486611212565b90509695505050505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006116bf82611708565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561175f578082015181840152602081019050611744565b8381111561176e576000848401525b50505050565b6000601f19601f8301169050919050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4d696e742064656e696564210000000000000000000000000000000000000000600082015250565b7f5370656369657320646f6573206e6f7420657869737421000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6118d0816116b4565b81146118db57600080fd5b50565b6118e7816116c6565b81146118f257600080fd5b50565b6118fe816116d2565b811461190957600080fd5b50565b611915816116dc565b811461192057600080fd5b50565b61192c81611728565b811461193757600080fd5b5056fea2646970667358221220bd0def9fc96d4ef339ac97167eedb4a7854919c82797031ef88054603ed50e5364736f6c63430008040033";

export class MinterSimpleMerkle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinterSimpleMerkle> {
    return super.deploy(overrides || {}) as Promise<MinterSimpleMerkle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinterSimpleMerkle {
    return super.attach(address) as MinterSimpleMerkle;
  }
  connect(signer: Signer): MinterSimpleMerkle__factory {
    return super.connect(signer) as MinterSimpleMerkle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterSimpleMerkleInterface {
    return new utils.Interface(_abi) as MinterSimpleMerkleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinterSimpleMerkle {
    return new Contract(address, _abi, signerOrProvider) as MinterSimpleMerkle;
  }
}
